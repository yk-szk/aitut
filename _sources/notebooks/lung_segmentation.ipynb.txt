{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "MYqrqzgd-t3j"
   },
   "source": [
    "# 肺野セグメンテーション\n",
    "\n",
    "## 前準備\n",
    "### 主要パッケージのインポート"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:26.713075Z",
     "iopub.status.busy": "2020-12-24T19:58:26.712094Z",
     "iopub.status.idle": "2020-12-24T19:58:27.339004Z",
     "shell.execute_reply": "2020-12-24T19:58:27.338001Z"
    },
    "id": "WSFQMTTE-t3k"
   },
   "outputs": [],
   "source": [
    "import pathlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from PIL import Image\n",
    "from IPython.display import display\n",
    "from logging import basicConfig, getLogger, INFO\n",
    "basicConfig(level=INFO, format='%(asctime)s %(levelname)s :%(message)s')\n",
    "logger = getLogger(__name__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "moY2hgoO-t3o"
   },
   "source": [
    "### データディレクトリの指定"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:27.341995Z",
     "iopub.status.busy": "2020-12-24T19:58:27.340998Z",
     "iopub.status.idle": "2020-12-24T19:58:27.343988Z",
     "shell.execute_reply": "2020-12-24T19:58:27.343988Z"
    },
    "id": "QTkR-zBp-t3p"
   },
   "outputs": [],
   "source": [
    "DATA_ROOT = pathlib.Path('Data/Images/chest_xray')\n",
    "IMAGE_DIR = 'regular'\n",
    "LABEL_DIR = 'lung'\n",
    "CLASS_LABELS = ('lung')\n",
    "IMAGE_EXT = '.png'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "Pk8Hxqh_-t3s"
   },
   "source": [
    "### 画像ファイルを基にpd.DataFrameを作成する"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 202
    },
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:27.361978Z",
     "iopub.status.busy": "2020-12-24T19:58:27.361978Z",
     "iopub.status.idle": "2020-12-24T19:58:27.381027Z",
     "shell.execute_reply": "2020-12-24T19:58:27.381027Z"
    },
    "id": "B0uZrUGE-t3s",
    "outputId": "c62f581b-e349-446b-95c2-d9a0503b08eb"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>image_path</th>\n",
       "      <th>label_path</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\000.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\000.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\001.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\001.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\002.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\002.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\003.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\003.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\004.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\004.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\280.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\280.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>281</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\281.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\281.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\282.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\282.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\283.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\283.png</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>Data\\Images\\chest_xray\\regular\\284.png</td>\n",
       "      <td>Data\\Images\\chest_xray\\lung\\284.png</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>285 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 image_path  \\\n",
       "0    Data\\Images\\chest_xray\\regular\\000.png   \n",
       "1    Data\\Images\\chest_xray\\regular\\001.png   \n",
       "2    Data\\Images\\chest_xray\\regular\\002.png   \n",
       "3    Data\\Images\\chest_xray\\regular\\003.png   \n",
       "4    Data\\Images\\chest_xray\\regular\\004.png   \n",
       "..                                      ...   \n",
       "280  Data\\Images\\chest_xray\\regular\\280.png   \n",
       "281  Data\\Images\\chest_xray\\regular\\281.png   \n",
       "282  Data\\Images\\chest_xray\\regular\\282.png   \n",
       "283  Data\\Images\\chest_xray\\regular\\283.png   \n",
       "284  Data\\Images\\chest_xray\\regular\\284.png   \n",
       "\n",
       "                              label_path  \n",
       "0    Data\\Images\\chest_xray\\lung\\000.png  \n",
       "1    Data\\Images\\chest_xray\\lung\\001.png  \n",
       "2    Data\\Images\\chest_xray\\lung\\002.png  \n",
       "3    Data\\Images\\chest_xray\\lung\\003.png  \n",
       "4    Data\\Images\\chest_xray\\lung\\004.png  \n",
       "..                                   ...  \n",
       "280  Data\\Images\\chest_xray\\lung\\280.png  \n",
       "281  Data\\Images\\chest_xray\\lung\\281.png  \n",
       "282  Data\\Images\\chest_xray\\lung\\282.png  \n",
       "283  Data\\Images\\chest_xray\\lung\\283.png  \n",
       "284  Data\\Images\\chest_xray\\lung\\284.png  \n",
       "\n",
       "[285 rows x 2 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def create_dataset_df(data_root, image_dir, label_dir, image_ext):\n",
    "    dfs = []\n",
    "    root = pathlib.Path(data_root)\n",
    "    image_filenames = (root / pathlib.Path(image_dir)).glob('*' + image_ext)\n",
    "    df = pd.DataFrame(image_filenames, columns=['image_path'])\n",
    "    df['label_path'] = df['image_path'].map(\n",
    "        lambda p: root / pathlib.Path(label_dir) / p.name)\n",
    "    return df\n",
    "\n",
    "\n",
    "df_dataset = create_dataset_df(DATA_ROOT, IMAGE_DIR, LABEL_DIR, IMAGE_EXT)\n",
    "display(df_dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "MiL6rk0q-t3x"
   },
   "source": [
    "### 画像を表示\n",
    "入力画像を背景にセグメンテーションを重畳表示する"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 173
    },
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:27.387039Z",
     "iopub.status.busy": "2020-12-24T19:58:27.386024Z",
     "iopub.status.idle": "2020-12-24T19:58:27.699510Z",
     "shell.execute_reply": "2020-12-24T19:58:27.700509Z"
    },
    "id": "TrTnSTfN-t3y",
    "outputId": "3cdee2b5-203f-46de-f788-31bcaf617d1d"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "OVERLAY_ALPHA = 0.5\n",
    "cmap = np.array([[0, 0, 0, 0], [255, 0, 0,\n",
    "                                255 * OVERLAY_ALPHA]]).astype(np.uint8)\n",
    "\n",
    "N_SAMPLES = 5\n",
    "plt.figure(figsize=(10, 5))\n",
    "for i, sample in enumerate(df_dataset.sample(n=N_SAMPLES).itertuples()):\n",
    "    image = Image.open(sample.image_path).convert('RGBA')\n",
    "    label = np.array(Image.open(sample.label_path).convert('L'))\n",
    "    label = (label > 0).astype(np.uint8)\n",
    "    label = Image.fromarray(cmap[label])\n",
    "    plt.subplot(1, N_SAMPLES, i + 1)\n",
    "    plt.imshow(Image.alpha_composite(image, label))\n",
    "    plt.axis('off')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data augmentation\n",
    "回転、左右反転等をランダムに適用する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:27.704518Z",
     "iopub.status.busy": "2020-12-24T19:58:27.703523Z",
     "iopub.status.idle": "2020-12-24T19:58:27.713495Z",
     "shell.execute_reply": "2020-12-24T19:58:27.713495Z"
    }
   },
   "outputs": [],
   "source": [
    "import tqdm\n",
    "IMG_SHAPE = (3, 256, 256)\n",
    "\n",
    "\n",
    "def load_img(filepath):\n",
    "    img = Image.open(filepath)\n",
    "    img = img.resize(IMG_SHAPE[1:])\n",
    "    return np.atleast_3d(img)\n",
    "\n",
    "\n",
    "def load_img2img_dataset(df, load_img):\n",
    "    data = np.stack(\n",
    "        [load_img(filepath) for filepath in tqdm.tqdm(df['image_path'])])\n",
    "    labels = np.stack([\n",
    "        load_img(filepath)[..., :1] for filepath in tqdm.tqdm(df['label_path'])\n",
    "    ])\n",
    "    return data, labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 141
    },
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:27.723485Z",
     "iopub.status.busy": "2020-12-24T19:58:27.723485Z",
     "iopub.status.idle": "2020-12-24T19:58:29.384347Z",
     "shell.execute_reply": "2020-12-24T19:58:29.385347Z"
    },
    "id": "0RxzGKGb-t4G",
    "outputId": "f60ff398-9fff-4267-99f0-3f19e1aa78e0"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 3/3 [00:00<00:00, 214.50it/s]\n",
      "100%|██████████| 3/3 [00:00<00:00, 500.57it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAANkAAABvCAYAAABhLWUeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAqE0lEQVR4nO19e5RcdbXmt+v96EeazvthhDwMCSAXQiIP0SQsZuAK3LjQ5XjVwYxPvC6Q5YzjzKh4fV+H8bJwEIG7dLl8Ii7NjDM+cDBLvZPxBQyDQBAhEGJCkCTdXV1VXa8zf1R9v/7q11XVj1QFqK5vrV5dVefUOb+q+n1n7/3t/dvHgiBADz300DmEXugB9NBDt6NHsh566DB6JOuhhw6jR7IeeugweiTroYcOo0eyHnroMOZEMjP7g5m9tr1DmRvMLGNmp73Q4+hGmNl+M7tkhvsGZrZ2judp+l4z+5GZ/eu5HPfFgshc3hQEwaZ2D6QRzOyrAJ4JguA/tRhL38kYSw8vDIIguOyFHsOJoucu9tBDhzFXd9G5EWZ2o5ndZWZfM7Oxmiu52dv3w2b2sJkdM7OvmFmitu0aM/uVd+zAzNaa2bsA/C2Af1dzCf97k7E4V8PMvmpmt9ZcjIyZ/bOZLTWzf6yd+1Ez+yt57783sz/Vxv2wme2UbWEzu8nM/mJmT5rZ39XOFaltHzSzfzKzQ2Z20Mw+aWbhuXyfLwWY2RYz22tmx2uf+YtmFvN2u9zMnqh9Z583s5C8f5eZPVL7HX5iZqtneN49ZvaO2uNrar/pF2rjeMLMLqi9fsDMjqhraWZ/bWb3m9lobfuN3rHfZmZPmdnzZvYRb16HZH48X5vjp8zlu2uXJbsSwLcBLADw3wB80dv+twD+BYA1ANYDaOr+EUEQ3A7gGwD+IQiCviAIrpjhWN5YO/5CABMA9gK4r/b8bgD/Rfb9E4BXAxgE8HEAXzezZbVt7wRwGYCzAZwD4G+883wVQAnAWgB/BeBSAO+Y4RhfiigD+ACq3+P5AHYAuNbbZyeAzah+X1cB2AUAZnYVgP8A4PUAFgH4JYBvzXEcWwE8CGAYwDdRnXfnofo7vAXAF82MIcQ4gLehOi//GsB7zexvamPaCOBWVOfmMlTnwAo5z/tR/c1fA2A5gGMA/uucRhwEwaz/AOwHcEnt8Y0AfibbNgLIefu+R55fDuBPtcfXAPiVd+wAwNra468C+OQ0Y/H3v0O2vR/AI/L8TADHWxzrAQBX1R7fC+Ddsu2S2rkiAJagSuCkbP9XAH4+l+/zxfqnv3ODbdcD+L73O/xLeX4tgP9Ve/wjAP9GtoUAZAGs9n/DBufZA+AdMl/+6P2eAYAl8trzAM5ucqx/BPCF2uOPAviWbEsBKMi8fgTADtm+DEARQGS23+OchI8GOCyPswASZhYJgqBUe+2AbH8K1StDp/CsPM41eO6EEjN7G4AbALy89lIfqldqoDpGHbc+Xg0gCuCQmfG1kLdPV8HM1qPqBWxGdUJGAPze263Z77wawM1mdpMeElXL8dQsh+L/ngiCoOFvbGZbAXwWwBkAYgDiAL5b26/u9w2CIGtmz8txVgP4vplV5LUyqhfYg7MZ8MkSPlbJ45cB+HPt8TiqPxgAwMyWeu/r2BKBWkxwB4C/AzAcBMECAA+h+uMDwCEAK+Ut+hkOoGrJFgZBsKD2NxCcJNX1BcKXADwKYF0QBAOoun/m7dPsdz6AqlewQP6SQRD87w6P+Zuohi+rgiAYBHAbmvy+ZpZE1QUlDgC4zBtzIgiCWREMOHkke5+ZrawFjv8RwHdqr/9fAJvM7OyaGHKj975nAXQqB5ZGlcTPAYCZvR3VKx5xF4DrzGyFmS0A8CFuCILgEICfArjJzAZqQfIaM3tNh8b6YkA/gFEAGTPbAOC9Dfb5t2Y2ZGarAFyHyd/5NgAfNrNNgBON3nCSxnw0CIK8mW0B8GbZdjeAK2rCSQzVuacXjdsAfIoCjZktqsWWs8bJItk3UZ2UT6AqNnwSAIIgeAzA3wP4GYA/AviV975/ArCxpiT9oJ0DCoLgYQA3oSqMPIuqf//PsssdtTE/COB+AP8TVaGjXNv+NlRdkIdRDYrvRtVv71Z8ENVJOobqd/OdBvvsRtWFfADA/0D190MQBN8H8DkA3zazUVQ9hpOR/7oWwN+b2RiqMdhd3BAEwR9Qjdm/japVywA4gqqHAgA3o2oFf1p7//9BVXSZNawW1HUMZrYf1cD1Zx09UYdhZpcBuC0IghlJzz28tFBTJI+j6g4/2c5j95LRTWBmSTO73MwiZrYCwMcAfP+FHlcP7YOZXWFmKTNLA/jPAP4fqopqW9EjWXMYqrmzY6i6i4+g6nL00D24ClVx5s8A1gF4U9AB167j7mIPPcx39CxZDz10GC2T0V/60peCVatWYXBwEJFIBPF4HLFYDIcPH8bBgwcxNjaGTCaDUqmEcrmMcrmMIAhQKBQQBAHMDOFwGOFwGKFQlc+hUAhBEKBSqaBYLGJiYgLxeBzJZBLxeByJRAKxWAz9/f1Ip9OIRqOIRCKIxWKIxaqlckEQIBKJIJvNunOOjIxgZGQEExMTKJfLKBQKmJiYQDabRV9fH+LxuBtLf38/UqkUzAyVSgWFQgFmhmKxiEKhgHK5jEqlgiAIkEwm3fiTySQikepXViwWUalUUC6XkcvlMDIygqNHj+LIkSPYv38/nnvuOaxZswYrVqzALbfc4ueTXlQws5470wYEQdDwd25JMk7yYrHoJnkul0Mul2OpCYIgQKlUQqVSQalULfDQScpJGQSBI5qZIRQKuW2lUgm+21ooFJBIJNxzEqJSqSAUCqFSmUzE5/N5TExMuHNwv2KxiIGBAaTTaVQqFYTDYaTTaSQSCZiZI0g0GkUoFEI0GkWlUnHjK5fLMDP3nCiVSigWi27MoVDIEZGP+Zl77ngPLUmWSCRQLBYdGUKhkJtcapk4EcPhMIIgqJtwoVAIsViszqKZWR1JJyYmHNFoAYMgQLFYRDQarRtToVAAUCUyn4+NjbnnJHelUsHg4CCSyaQbHy1lOBxGqVRyFkwJ5H8GvsbXabF5QeFn4HdBkpHoejHoYX6iJcny+Tz6+/sBwFmq/v5+ZLNZjI6O1k0qTkKShK+bGSKRCCKRiJu4SrAgCBCLxVAsFt3E5XE5mUlSkq9SqSASiTiLEg6HnZtHy5pOp5FOpx2p4/G4GwOJouQiOHZ+Dr7Gz8fvgVaOn0UtHi1ZsVh05O9h/qIlyY4dO+bilyAIkM/nEYvFMDAwgLGxMeTzeeTzecTjcUcmAG4C64QFMMWKcQKGQiHE43HndpbLZWfBisUi8vk8gEmrR5eOkx2Ae1+pVHLxHeM5xnkkCF1HHSdBsvACoFaZLmg+n59ioWi1OB5aYlreHuYvWpKsUqng2LFj6OvrQzKZRBAEyGazzoWkEMKJRELRLaPl4KQtFArO3VRLwXgokUggn88jl8uhXC47ctMF5Pn5OBQKoVQqOQsYBAESiQTi8biL+dLpNJLJJAA4QUYtmBJMYyk9pxI4n8+7mJNEI/nUhQTQ8LUe5h9akowTbGRkBIODg06By+VyKBaLMLM6i8OYBahaKbqRVPb0/YVCwU1SkhGYnLC5XK5OjOD+OvEjkYib8ACcBeO4EokEotFoXcwYi8Xce9SVU+ICmBKnFQoFZ8H4pwRUgYPE7bmLPQAzIBndnpGREQwMDGBiYsL9FYtFFItFAJjivqn6ZmbOsnHyU3golUpuQo+PjztylkoljI+PIxQKIZVK1blndPn845NgHPvExISzXkwT0E0slUqIRCLuwqCWKRaL1bm4ANyFodH3o2Ph60DVcvbcxR5akoyTr1QqYWRkxLlndPsYHwGoEz6i0ajLKTGGKZfLiMVizsWMRCKOPKVSCceOHXMqI2OlSqWC8fFxVCoV566Wy2VMTEwgHA4jGo26P5KBOTKOnRa3UCjU5brUCqoYUiqV6vJ7ZubIqlaTLjDfw4uKbte0Rg/1SCaTyOfzbUlxRKNRrFmzBqVSCU8//fSL7sLWsuJDk8z5fB6jo6PuuU4mgpOT/xmbcR+6fZz4jOv4HiqKFDYikcgUC8lj0yr6JNP4KZvNuhxasVjE+Pi4k/uj0Wgd4aPRqDuun5ZQy0mS53I55PN5Z62Y/KbqqMTtYRLpdBof+MAHcO+99+JjH/sYVq+e+6KGWCyGK664Al//+texd+9e/PrXv8add96JDRs2TEn9vJCYVvjQq3sul0MsFnM5LU5GTiw+50QFqrm2XC4HYFIeB1AXz2SzWWfFfCuiY6FaSLVP3UNNUFcqlbrcGwDnftJFZRUIj6npA7268ly0yjwfrRcvAPl8HtlsFtls1n2OUqmEiYkJ9FDFhg0b8PnPfx6XXnopYrEYtm7dije/+c343Oc+h1/+8pd47LHHZnysUCiE6667Dh//+MedsAUAb33rW3HJJZdgz549+NCHPoQDB174jhAtSaYJW5KNggStDROvwGTlA6V8WoNYLOYmqlqNXC6H8fFxZLNZ5HI5Zy34PjdIIa1WV/i5N5KKiiPHpwRUdZMKJq1ZKBRyJAQmZXiOeWJioi53RsuczWadlczlco5oLLfqAdi8eTPuuOMOnH322e41M8O6devw5S9/GQ888ACuvfZa/OY3v5nR8davX48bbrihjmDEsmXL8KY3vQmLFy/GRz/6Uezdu/cFrbxp6S4WCgXnFumVmlYCgMtDMRelE5//o9EoYrGYc9FoFTKZTN3xKKKQNCps0LqFw2Ekk0knpMTjccTjcbcfc1NKJAo0GnexrjGTyaBQKLj6SKqcHAMvMtzeTP7Xekx+T/x88x0rV67EN77xjTqCKcLhMM4991zcdNNNGBgYmNEx3/CGN2DpUr8lzCTMDDt27MD3vvc9vPvd70Y6nZ7L0NuCliTj5CTJNAah60QBQkmmLhwnKGO0SCSCQqFQ57pp9QXPSVeME5cWSI+nSWKSiQIFMFmlQjVU4yjm4zKZjCssVjGFQg5Bt5I5ON/i0hWmhfWT3PMVqVQKn/nMZ7Bu3bpp992yZQsuvvjiafcLh8NYv379jM6/dOlS3Hzzzdi9ezd27tz5gvwm05ZVaYJWy6f4ejKZdFaKLplWbDBnRWszMTGB8fFxZ72UaCqq0ALy3KoU0qKQmLSCKjSo8qfxViQSqSuNYqzHahatstcYksSmRfMVLCWZEm0+Y+nSpbjhhhtw9dVXz2hyx2IxbN++HT/84Q9b7rdo0SK86lWvmvE4YrEYduzYgY0bN2J8fBz33HPPSXUfW5JsZGQEpVLJuYNah8hlJxpj0SQzOUt5nK5dJpNBJpNxkjgJpmVKfI+/RIZWBpic0FpwrIogYyVaQl9W1+RxKBRyVi4ej7t6R5KM71GCzoRovnAz37BlyxbccccdOPPMM2f1PVxyySVYtGgRnnvuuab7bNu2DS9/+ctnPaZly5bh1ltvxWtf+1o888wzs37/XNHyUktX6vjx43j++edx/PhxZDIZ5HK5ujiKLhgVP5JKC4NVvmeOjdI6Jz4ns65NU4Losbn0hlaUBKRkn8/nnRXTRLYvrlAZzGQyGB0ddSQiSXwBRt3GWCxW5y6qm6zlZPMN/f39+MhHPoKzzjpr1heapUuXtoyfIpEIdu7c6TyO2eK0007Dddddd1K9jJZnInm0coJQYgBwBNIrOQnAGIbkYeykEjgtDp+TxOqCAnDH1QlPglHpY76Kx+AxleSav9JSrqNHjzp3V9MFGgvScpPwwNR8oRYazydEo1F8+MMfxmWXza3jW39/PxYuXNh0++DgIF75ylfOdXgwM7z97W/HeeedN+djzBbTkowWAUDdVRvAlOCfVknjMOaiSFSKD36CuVKpOAWTMngmk6kTQqj08bwkIC2eVmZoHSX3VSLzmDp+LuLMZDLOcvqrujVNoXWZPI8uTNUxzhe88Y1vxPXXX+++k9lCF/M2wsjIyKzyaY0wPDyML3zhC1i8ePEJHWemaEkyChQ6mf3/OvG0Kj4UCiGRSCCZTKJQKCCTybjyKpXmAdRNenXxaJEaQV0zjkWX2ygBSAjNqZGEJLwmx+kO+7K9rhlTa+3natSqzaeyqlQqhV27djXMXc0UkUgE27Zta+pmLly4EGeccUbDbbPBli1bsHPnzul3bANakkxdQk5M/fMnH1C/5J4TmyKHLu2nC6ayu7pZ3C8IgjrXUGMlVfKYPxscHHQijYohek4dq+bMtPg5l8vVVa/449LSLubt6r5YIf98wcaNG7Fly5YTOkYoFMLZZ5/dlGRr167FsmUn3qg5HA7j2muvxZIlS074WNNhRtGfTzag3jVS6VonIoC6Snt/gqvYodZQj8XeHapianMdfZxKpdDX14d0Ol0n4Wt5mB+L6UWDIg4tKM+rSqGOTcmWSCSmJKop4swX7NixA319nb27sH8xOxGcccYZeP3rX9+24zXDjEnmr6NSMig5ALiJV6lUMDY25np1cGmJn7vi/pzQnPTMo+Xz+Snxnu6vE94vLFbhQ+MxKptq8fzcml4AGiWd1ZJS6fSvwPPFkp122mnYtWtXx8/z4IMP4skn29NFOxQK4f3vf3/Hrdm0JNP4S5du+I1x/MesXucCT425gKkdnjjBNV7S4lvGSTrZuY8fK5IIjaR7fU6lU600j0+XkRZUBRf/j7EZc2yK+WLJNm/ejNNOa88NeJYuXdq0vEpL+tqBU089tS0xXiu0JJkuSvQnaaMrvL5O4jA/lsvl6iR5jd20ol3dSCUc4zo9pyaWSQIlusJfmqNuoibGOaZKpeIKfemmEjy+L4Iwd6aYLyQ777zz5py78rFhwwYsWLCg4bYlS5bgZS97WVvOA1Tdz+3bt7fteI0wLcmA+jZrja7mQH0Rr1++RGmdsZlO7mw2W5e/4j6+i0pXkSkBYHJ5v5/D4ipoLgxl6RfdOZLRJyItm1/NT9dUrRk/M//zM9PqAVOXzXQrli9fjiuvvLJtx2PRQSNQdW4nzjnnnBNSRKfDjNRFXUYCYArBAEyJUbhshCRSd5PWjYqjb2VIWFoQv3CXx9fFnVqkrL09dBElyckx+oXGhAokumRGraCKPir2sK8jMR8s2dVXX421a9e27XhcNtQITz/9NH7yk5+07VwAcNFFF2HTps7dJHVGMZm6bo0sGDA52WghKpXKlE7D6pqp2+hbQT/eUQumdYQkm67GZoWJjkMT1HxN40QAjrAcE62YLr/xqzrUZdaLAReTzoeKj0gkgte85jVtLVMaHh7G5s2bG24rFAonnIz2kUwmsWrVqul3nCOmtWR+TObHYj44uXyRA6gvHObxVFlU8rAHh0JjMz8u88lPMvriipKL7qbfv4PQC4IqkP5n1e+CIgi3z4eKj3bXAcbjcWzevLmp+PHEE0+09XsNh8M455xz2nY8H9OSTK0YgDrXSt0kX9qme8mJRhfMVwA5+bld+2loSgBA3TJ//3VObs2jseKEnaz8CnxtgqNFxfq5GpVfEY2S56FQyJ1/PqCV1TkRXHPNNXjf+97XcFs2m237xeucc86ZIlq1CzMiGf/UNVN3UYlGy8HJzEmq7Qq08Y3msfjYrxrRm1Zo/kqrMbRwmF2xqPb19/e79WyEEk0LlFUi1guAKpf83EQzSX8+CB9r165tWdA7V6xcubKpC/e73/0OBw8ebOv5zj//fJx66qltPSbRkmT+khMlkV9/yMecjJr4VXdOyaVpAV/6Bya7W9G6AJMxnJZTMYGtiWrdTgvIsbE6w3d9STSuPOD46LaqW+SrjD7J9ELSzVi/fv2UC1i7cPrppyOVSk15/bnnnsNf/vKXtp6L5XGdwIxIpupfozhEoQG/WgC1HCxb0lpGAHXk9N9HV0/P4a9Zo6sWCoWcNQuHwy6F4PcQ0fP77ivHqekDvzSsUWJaxZ/5sHDzySef7Fifw4ULFzZ0uwuFAu6///6OnLMTmLaDMDA1kavb9HWfYLoIk66jLtTksVXGJxhnqauoeTp1F2mt9DiU9IOg2kk4FAq5Oki6pxyr9iXhsX1XV4mogkyzOG2+kGzNmjUdi2WafX9BEODo0aNtPRc9nE5gWkumIkQj6V6hk5DVGbROWlGhExmoF1j8WkNOdpKMk16JrxaNuTE25/ETw1owrIXD2qpArWujAmeS04+3NMWh7mi3wsywdevWjl1I9u/fj/Hx8SmvB0GA/fv3tzXeTaVSOP/889t2PMW0HYTVTQPqy6E4gfzaQU5WVf/0Pbo0X2Mtv2oemIzz/PiIJNJENXNpJKaWYUWjUdfQ1I8n/dItTZIrARvlCFspjrrgsxuRSCQ6Wve3YsWKpqLKY4891va1ep3qOjxjCX+mUBJqXqlRGROAugJdAHVlWXpnTCWgxnC+uqit6RibsWeEL7JoQbJaSr09rpnVqY2+NWsGX+jpRvBi1imsW7euacOcffv24dlnn+3YuduJGbmLCp9Eja7kBCetuoh8XZe7NIpfwuEwUqlUHTm1SqSRldG1XcyPhUIh1++RtYkkKq2eCjy+6MHzNfu8+r2om8jxdLOE38k4Bqjmww4fPtxw27Fjx3Ds2LG2nm/ZsmVzbpvQCtO6i1qzCExdMqIul77G+Mffp5F19InLSaoWhBaPiW7u65PT74/IGI0Fy+r2aTWI2WTSnOfSxZv+Z9TP4m/T76Gb2w/wO+gUWnkBuVwOe/fubev5rrrqqhl3MJ4NZkQynxjNgn6tb+T7dRKr2KD7+WVWfn9F7RuiizqB+nVtGuv5RCb5OFa6hX6+zs/RsSdkqwnV6PvQ77BbQU+lU0ilUjj99NObnvv48eNtPZ/fPrBdmNZd1AmkROJzhb9dQQvh59yA+gWcJKOWZDGRTGtE+V2FD6qH6paStFQd0+m0uysNm6pqqzj/gtLIJfXH7n9+oN6t7eYq/GKxiAceeKBjx2fbvWZ46KGH2uqOHz582N2fvJ2Y8f3JVBxo5vZNOXho8qYNehMIQl1DoP7m5hrT8DXNUfl1lTyGSvk8hyaqE4mEi7d4PLY50NhMO1jpbZ14TIVeXPh+3g+t2y1Zp4/fylq1OxHOudNuzDgm81W4VlZM4yvNbfkxzXTCCjDZnpvHAqa2LiBZdc1Zs8oU3ldaUwXadFUFEBKZ7Q84Nv870eP4N7fo5ir8WCyGjRs3duz4hUKhpbjx6KOPNhVG5oIzzzyzqXt6IpjWXWw08RoRSiebVmao5fGtEP/01riaHOZELZer9xHTJTG69ES7XvmJYCark8mkWyE9ODhYJ6b4Er5WpjDfNj4+3vDCop+Dll/vQtPN6mIikcCKFSs6dvxwOIzBwcGm2xcsWNDW7ljpdPrkk4xXbRUHdFL5ZGsUu2mzG1/8YGsCXvG1MBeAsyKVSsWRRGV3tZjc368AodVLJpMYGBhAX18fBgYGMDAw4KpROGZ19TQ5rfFbo+9HP482aNUxdiNKpVLLG0OcKGKxWMsuv4ODg20t6jUzXHDBBW2vYJk2U+rf2qhRXOZbOU5WXZHs708LobGP71rROih5VCAhcVXK9x/7ZU7Mow0MDLgktZ5XrZH21mcbBaDegvnkUvez2y1ZLpfDE0880bHjHz16FPfdd1/T7Z0o5zrvvPNwyimntPWYMyKZTiA/wFeLxskFTE1Eax5Ky5e0NyJLsfx1WBQy/JImXeqiUr4qgUoInsfMkEwmkU6nXS5Lyc7PS7ePd86k5O+3FNf1cH5M2s0ws44VBwNVkrUqBD5w4EDbl7ycddZZbXcZpyVZuVx27dxU4vYJplf2Zld3vkbi+jkzzWPx3KzYAOBqCpXsjZQ+rbRolCzX3h48j2+ROXa2sxsdHcXo6GgdqfwFnzyPWsZuJlokEsGiRYs6dvxkMon+/v6m29n0tp0Ih8NtjzNnVFintyDSdmkkjk8iP/fEuEs7AesE1UJixmRmVmctmArgMZScWhnAGkZVI4HJnh+M1UjGVCo1RaxQi0sRZGxsDGNjY3UuczMxyH25XVy3CFQvKJ288fzy5cs72nujEUKhEJYvX97eY85kJ73XsvYl5GRXAvKPxOQE5vs1xqLsDtS3n2M8pzk2YLJrsBYL+5NcFUVVG5mUZk9G3luMsr+6u770z896/PjxOhVUrZhv3ecDSqVS26suFKFQqKV6yBCh3bjwwgtbWtDZYkYkKxaLGB0dddXpfjziu1C0AmoRdBsnsnbm1QJfnfD6RWryWgnlr3XTnBmPq/WM8XgcqVQKiUQCqVQKqVTKvZdEV2KS3LRmWpXSSNghujlHBlQl/E5I3kSpVGrZy6NT6ubrXvc6bNu2rW3HmxHJgiBwvehVFfStmBKMz/V2RBRFdMUzMEkKLmlRi2ZmrikO99PmpjqxST6/mQ4tlrqLtGZ9fX0YGhpCX1+fIxfHzrFpLeb4+PiU3iDNUhndjqGhoTndu3mmMLOWliyXy3VkuUs8HseFF17Ytnh6xkEDYyrGV3Qh+Zre9laFEj5ulMgFpnYpVleScZQShfWLKmxo0xxNRLNahC26NZFNokWjUaRSKQwMDLi2cbokR5VKAO7zaLzlu61+KqNbkUqlOuKuEdFoFK9+9aubbi8Wi/jzn//ckXNfcMEFbVvGMyuSZTIZJ2WTaLz9bC6XqxMKNG7xr/jqQqoqyQlNWZjrlfhj6kJJdRNJmkYuZ6N4jWT0b/SuvRk17UCrZmYud+ZPLk3E8wLDz9itOHToEA4cONDRc7QiMWPvTmDTpk3YunVrW441Y5JRyvdFED9npPkiLepVS+bnsbS7E2MpbVDKBZdqGUg4Kow8jj/mRvWJanG0it8vWNZKEiVLLpeb0sPDTxXwXN2MeDzeUQkfAE455ZSmblskEmlZdnUiGBoawrve9a62WOoZkywIgjopvxG51DXSmEqrm9WiqAzP/bTAl+TzSalWislltVpa6qSEUqLpbXRpCela0q0EpqqeAJzU36xRjia/uxls9dBJrFmzpqXbxqqdTmDVqlVtScPMmmTaw9BPUCtIRAB1k1YtkFZp6KRVK+jfVVMnv058JaUqjb4V8l1Ouoa8HW6jLlOaoPbze36ejudj7NrNGBoa6lhjU2L16tVN5fRSqdSxmAwAFi9e3JYC5FnRVBPKqiD6yViWKunrhAoDlPFV9ePETSQSGBwcRF9fn0suK4FUtvetSqVSmSKENBoDH5No2hfEb/zD/dX1VNJzHLRgVGK7GUeOHEEmk+noOY4fP45cLtdwWyQSwdKlSzt27oGBgba4w7OKGhmXacs0v4wImJy4Wi6lLh8nZyKRcC6Hr/6x81QqlXIJaxKFVR08j7Y5UCujDXjUVdRkNq0Y2zSn02l3n2tW3+dyuSluJ1MFjcq6eM5uB2/k0UkcPny4KclKpRIefPBBXH755R059+LFi3H++eef8K2aZkUy5suaLW4EJlttq0KnE5FuWTqdRjqddv0S1YoBqMttaTcr3+JxXEDjOkW1sEoQrpKmT69r3wYHB5HJZFzFyejoKEZGRqbEg/6KAD33fMiXveIVr8DQ0FBHz7Fv376msW0QBB0leSgUaktjnVmTjHkxf2WxkozqIgnHLymdTmPBggUYHBxEOp12d12hFVP3j8ei60cCqfqorp0qhFqlQWulDVB5bG1vAEzGecyfURhJJpNIpVIYHx+vq15p1bzU/yzdiIsuuqjjwsfQ0FDT7zESiWDdunWzPqbG8dMlnNuRkJ51kqHRokRfXNB+GNyeTCZxyimnuOoKxj901dS9U8ujcY1aLC2X0hhKXU5txKJVJX6Br8ru/CyxWAyZTMZZ7WQyiWw2i/Hx8br7mPkt6Xw1tZvRzI1rJw4dOtT0QhUKhaZdtKmq+MTEBH7729/irrvuQhAE6Ovrw/bt27Ft27a6G8FrQcL27dtx++23n5CINeuZoJbJd8X8eISCQzwex8KFCzE8PIz+/n709fXVxWJKClUf/er+ZolofiH6mJZOSaiuJsepdwTV12hds9ksSqWSs4Ka7Nb0Q6PFod1uyTopnwPV+bVv376m20ulEn7+85/j4osvrmuxXS6XcfDgQTz66KO477778KMf/QjHjx/H6Ogojhw54m4iCQC33347Lr/8cnz605/Ghg0bMD4+jhtvvBHvfe97sWbNGpx77rkYGhrCoUOH5vw5Zk0yVqQ3qtPTKgmKHdFoFMuWLcPChQuRTqfR39/vmtn4SWBfMQQm+x/yauRL/Zo8BuAqOfQG7dqXkfto7KdLZ/iaWmMmn1mtr/BTBlqBou0Nug1m1nLdFS/Gu3fvxsMPP4zh4WFceeWVrkZ0eHh42nMUCoWWK68rlQpuu+02vOUtb8HatWsxNjaG559/Hp/4xCdw77334tChQ9OuiigUCti9ezd+//vf4zvf+Q4eeeQR3HLLLTh8+DCuv/56PPnkkydctTMnkrFPvEKlbJ1YixcvxpIlS9DX1+cEDyWYEstvUgpUv8hEIoFisejqBlmlQbICk+U3kUgEqVTKlTUxH0er49cicgyajvB9da6P04sCSdjIimlqolsRiUSwcuXKuteCIMDBgwfxi1/8Aj/+8Y+RyWTw05/+FOPj4zAz3HTTTViyZAlSqRTe8573IJPJuN9y+fLlOP300zE8PFyXf1Q3rhGOHj2Kz372s4jFYrjnnntQKBRw+PDhWV3cgiDAgQMH8M53vhOZTAaFQgHf+ta38IMf/KDuzqtzxZwCB793hw5WrUtfXx8WLVrkCMblJXQR/dhK/xpJ44yLKpVKnWAC1C+QDIfDiMfj6O/vb7hy2R8vf1BVTTW5DQCjo6N1tXJaqa9WzI8VuxXlchn3338/Lr30UgRBgD/+8Y/4yle+gu9+97vYv3//lKt/EFRvd7R//34AwJ49e+pK4cLhMFavXo1NmzbhjDPOwK5du3DqqadOa/GCIMDXvva1trjlf/jDH9zjSqXS8LZNc8GsSMbJ5CuKCq3kGB4edkIHc2KMa4BJV6vRHTP1nHQfGRdNTEw4V7DZRGaxL7tMaUJafxBfsPEr/Fmtz4WnXPgZCoXqFpP6421WctUtqFQqOHToEEqlEu6880586lOfwjPPPDPj9/vxe6VSweOPP47HH38cu3fvxt13341bb70VDz300IyP9WLFrCV8ulzN+n0AVfL09/dj6dKl7qbotGD+chQVJDT/5f/R6nDSswqkGZiwplvXqCpFfxy6oyROIpFw+7BQmW5DNBp1CpQe01+x/WL/8duBPXv24IMf/GDbrvrEvn37sGvXrhMSHF4smFNM5i9P0asSxQ4meinRq6rnr/miYqfJXf0P1JctsVpkuhwGiaYXBVVDNe7TBj8AnCvKz8bPxGoXn/z+YlMSuZtx9OhR3HzzzW0nGPHUU0915LgnG3OKyfSK3ahrE0UJbS7qLyFpRDANeHXtF9/jy+bTwT+Purhasa+rCtTK+UonF4xq7o5W0i+S1vitW3H33Xd37Kbs3YQ5zQJOTrVqWmLFRLNPGGCy0kLvI6Yyu76nUXzG888k3uGxNE7Usii1bNq3Xpfl+G6lfpZmKQx+rkQigdHR0bl8xS8JnIxkdDdgziTz74Ki7pLGVn5tnx+D+dXyvjrnK3d8PFOoNVLxg6+x6Jnj1iUsSqJGqqTWZ+rFgxeOvr6+ls05e5gfmLM/08ya6cpo3aYEUhfOL4tSks2VWI3GCsCNSy0k18dphQbJxmRyo/VyAFz9ItsXxGIxFItF13aO5WM9zG+cUNDQiGC+VfOVR//KrxbMdxNPVDjwrY+eX1VBLcnRkjGOiUJHo3iQy3K0cJnVJslksmPL43t46WDOJNPJ5svYqubRsvlrwnyJ3idcO5Q5jcl8IUNfY9WBEkzLrPxxqeJJ91cJRiEllUq1/eYFPbz0MCeSsbqd5VH++i4ADQURP2/k1z+2O7dEAvmSPZ+zsppErFQqiMfjMDNks1mXqFYy+mP02841at7Tw/zGnEoS0uk0BgcHXYKZBbns2KsFvI3QTJ3jtk7kl/w2CbpUx8xcnmxiYsIVGVN1pGSv41a1VGMybcjD2KyH+Y1Zl1WZGRYsWOCqLkgwVQu5r67L0ff7j4HWpTHq2vG9swHJVSwW3XhoZek+ajsCWjWSrlwuO6utiilzbyri0O1UsvUwv9GSZH6OCKjezoYkU4KxZEpl7FbJYy3C5aRu1jBUK94BzFoU0XVjFDq0BIzLWIDJzlpap6lr2fS74dj9tIN+B92ekO5hesyKZKFQCIsWLcKCBQtcTEZrpldz7gtM7b/hl0f5S0/0PVoPqIrjTAlGAnCpCoUNFSz4X/NjHD/jzUYduXyXUcfm5816mN9oOQOSyWRdXVo8HncEUxdRJ5YSgC4j0axKQ9/ru4S6nGQusr6mEUgyVQQ1Z0arxf3i8bizYv5dNBtBPx/P2+0NTnuYHi2Fj8HBwbpJzeC+UX2hnzwGJt26Rss+/Ku+X90BNC9bmim4r3/DQr98ip+Bj7VKRW9sqOVZvuUCJpdtaCJ+PlTi99Aa1psEPfTQWXTvqsIeeniRoEeyHnroMHok66GHDqNHsh566DB6JOuhhw6jR7Ieeugw/j+JLnLELRGWkAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 288x108 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x108 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x108 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import albumentations as A\n",
    "from tut_utils import AugmentedDataset\n",
    "from torch.utils.data import DataLoader\n",
    "\n",
    "album_transform = A.Compose([\n",
    "    A.HorizontalFlip(p=.25),\n",
    "    A.ShiftScaleRotate(shift_limit=0, scale_limit=.1, rotate_limit=5, p=.8)\n",
    "])\n",
    "\n",
    "\n",
    "def random_transform(x, y):\n",
    "    x = (x / 255).astype(np.float32)\n",
    "    y = (y / 255).astype(np.float32)\n",
    "    tfed = album_transform(image=x, mask=y)\n",
    "    x, y = tfed['image'], tfed['mask']\n",
    "    x, y = x.transpose(2, 0, 1), y.transpose(2, 0, 1)  # to channels first\n",
    "    return x.astype(np.float32), y.astype(np.float32)\n",
    "\n",
    "\n",
    "N_TEST = 3\n",
    "\n",
    "\n",
    "def test_augmentation(df_dataset):\n",
    "    df_train = df_dataset.iloc[:N_TEST]\n",
    "    train_data, train_labels = load_img2img_dataset(df_train, load_img)\n",
    "    dataset = AugmentedDataset(train_data, train_labels, random_transform)\n",
    "    loader = DataLoader(dataset, batch_size=1, shuffle=False, num_workers=0)\n",
    "    for i, data in enumerate(loader):\n",
    "        plt.figure(figsize=(4, 1.5))\n",
    "        plt.subplot(1, 2, 1)\n",
    "        plt.imshow(data[0].squeeze().numpy(), cmap='gray')\n",
    "        plt.title('input image')\n",
    "        plt.axis('off')\n",
    "        plt.subplot(1, 2, 2)\n",
    "        plt.imshow(data[1].squeeze().numpy(), cmap='gray')\n",
    "        plt.title('label image')\n",
    "        plt.axis('off')\n",
    "        plt.show()\n",
    "\n",
    "\n",
    "test_augmentation(df_dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ホールドアウト\n",
    "学習に時間がかかるため、今回は交差検証は行わない。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:29.388344Z",
     "iopub.status.busy": "2020-12-24T19:58:29.388344Z",
     "iopub.status.idle": "2020-12-24T19:58:29.399332Z",
     "shell.execute_reply": "2020-12-24T19:58:29.400349Z"
    },
    "id": "R0rthjmd-t31"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training: 228 test: 57\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import KFold\n",
    "N_SPLITS = 5\n",
    "kfold = KFold(n_splits=N_SPLITS, shuffle=True)\n",
    "train_index, test_index = next(kfold.split(df_dataset['image_path']))\n",
    "\n",
    "df_train = df_dataset.iloc[train_index]\n",
    "df_test = df_dataset.iloc[test_index]\n",
    "print('training:', len(df_train), 'test:', len(df_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "8SIdvrDp-t37"
   },
   "source": [
    "## モデル作成\n",
    "[U-Net](https://arxiv.org/abs/1505.04597)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:29.413318Z",
     "iopub.status.busy": "2020-12-24T19:58:29.412318Z",
     "iopub.status.idle": "2020-12-24T19:58:30.385322Z",
     "shell.execute_reply": "2020-12-24T19:58:30.385322Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "==========================================================================================\n",
       "Layer (type:depth-idx)                   Output Shape              Param #\n",
       "==========================================================================================\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─Encoder: 2-1                      [-1, 16, 512, 512]        --\n",
       "|    |    └─Sequential: 3-1              [-1, 16, 512, 512]        1,296\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─MaxPool2d: 2-2                    [-1, 16, 256, 256]        --\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─Encoder: 2-3                      [-1, 32, 256, 256]        --\n",
       "|    |    └─Sequential: 3-2              [-1, 32, 256, 256]        7,056\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─MaxPool2d: 2-4                    [-1, 32, 128, 128]        --\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─Encoder: 2-5                      [-1, 64, 128, 128]        --\n",
       "|    |    └─Sequential: 3-3              [-1, 64, 128, 128]        27,936\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─MaxPool2d: 2-6                    [-1, 64, 64, 64]          --\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─Encoder: 2-7                      [-1, 128, 64, 64]         --\n",
       "|    |    └─Sequential: 3-4              [-1, 128, 64, 64]         111,168\n",
       "├─ModuleList: 1                          []                        --\n",
       "|    └─Decoder: 2-8                      [-1, 64, 128, 128]        --\n",
       "|    |    └─Upsample: 3-5                [-1, 128, 128, 128]       --\n",
       "|    |    └─Sequential: 3-6              [-1, 64, 128, 128]        295,488\n",
       "|    |    └─Dropout: 3-7                 [-1, 64, 128, 128]        --\n",
       "|    └─Decoder: 2-9                      [-1, 32, 256, 256]        --\n",
       "|    |    └─Upsample: 3-8                [-1, 64, 256, 256]        --\n",
       "|    |    └─Sequential: 3-9              [-1, 32, 256, 256]        74,016\n",
       "|    |    └─Dropout: 3-10                [-1, 32, 256, 256]        --\n",
       "|    └─Decoder: 2-10                     [-1, 16, 512, 512]        --\n",
       "|    |    └─Upsample: 3-11               [-1, 32, 512, 512]        --\n",
       "|    |    └─Sequential: 3-12             [-1, 16, 512, 512]        18,576\n",
       "├─Conv2d: 1-1                            [-1, 1, 512, 512]         17\n",
       "==========================================================================================\n",
       "Total params: 535,553\n",
       "Trainable params: 535,553\n",
       "Non-trainable params: 0\n",
       "Total mult-adds (M): 5.80\n",
       "==========================================================================================\n",
       "Input size (MB): 1.00\n",
       "Forward/backward pass size (MB): 2.00\n",
       "Params size (MB): 2.04\n",
       "Estimated Total Size (MB): 5.04\n",
       "=========================================================================================="
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IN_CHS = 1\n",
    "OUT_CHS = 1\n",
    "UNET_DEPTH = 4\n",
    "\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "\n",
    "\n",
    "class ConvBNReLU(nn.Module):\n",
    "    def __init__(self, in_chs, out_chs, kernel_size, padding):\n",
    "        super().__init__()\n",
    "        self.block = nn.Sequential(\n",
    "            nn.Conv2d(in_chs,\n",
    "                      out_chs,\n",
    "                      kernel_size=kernel_size,\n",
    "                      padding=padding), nn.BatchNorm2d(out_chs),\n",
    "            nn.ReLU(inplace=True))\n",
    "\n",
    "    def forward(self, x):\n",
    "        return self.block(x)\n",
    "\n",
    "\n",
    "class Encoder(nn.Module):\n",
    "    def __init__(self, in_chs: int, mid_chs: int, out_chs: int,\n",
    "                 kernel_size: int, padding: int):\n",
    "        super().__init__()\n",
    "        self.out_chs = out_chs\n",
    "        self.block = nn.Sequential(\n",
    "            ConvBNReLU(in_chs, mid_chs, kernel_size, padding),\n",
    "            ConvBNReLU(mid_chs, out_chs, kernel_size, padding),\n",
    "        )\n",
    "\n",
    "    def forward(self, x):\n",
    "        return self.block(x)\n",
    "\n",
    "\n",
    "class Decoder(nn.Module):\n",
    "    def __init__(self,\n",
    "                 in_chs,\n",
    "                 out_chs,\n",
    "                 kernel_size,\n",
    "                 padding,\n",
    "                 scale_factor: int,\n",
    "                 apply_dropout=False):\n",
    "        super().__init__()\n",
    "        self.out_chs = out_chs\n",
    "        mid_chs = (in_chs + out_chs) // 2\n",
    "        self.up = nn.Upsample(scale_factor=scale_factor,\n",
    "                              mode='bilinear',\n",
    "                              align_corners=True)\n",
    "        self.block = nn.Sequential(\n",
    "            ConvBNReLU(in_chs, mid_chs, kernel_size, padding),\n",
    "            ConvBNReLU(mid_chs, out_chs, kernel_size, padding),\n",
    "        )\n",
    "\n",
    "        if apply_dropout:\n",
    "            self.dropout = nn.Dropout(.25)\n",
    "        else:\n",
    "            self.dropout = None\n",
    "\n",
    "    def forward(self, x1, x2):\n",
    "        cat = torch.cat([self.up(x1), x2], dim=1)\n",
    "        x = self.block(cat)\n",
    "        if self.dropout:\n",
    "            x = self.dropout(x)\n",
    "        return x\n",
    "\n",
    "\n",
    "class UNet(nn.Module):\n",
    "    def __init__(self,\n",
    "                 in_chs,\n",
    "                 out_chs,\n",
    "                 depth,\n",
    "                 ini_chs=8,\n",
    "                 kernel_size=3,\n",
    "                 padding=1,\n",
    "                 scale_factor=2):\n",
    "        '''\n",
    "        Args:\n",
    "            depth (int): UNets depth i.e # of downsampling layers\n",
    "        '''\n",
    "        super().__init__()\n",
    "        self.depth = depth\n",
    "        self.encs = nn.ModuleList()\n",
    "        self.decs = nn.ModuleList()\n",
    "        self.pools = nn.ModuleList()\n",
    "        chs = ini_chs\n",
    "        for i in range(depth):\n",
    "            enc = Encoder(in_chs if i == 0 else chs, chs, chs * 2, kernel_size,\n",
    "                          padding)\n",
    "            self.encs.append(enc)\n",
    "            chs = chs * 2\n",
    "            if i < (depth - 1):\n",
    "                self.pools.append(nn.MaxPool2d(scale_factor))\n",
    "\n",
    "        for i in range(depth - 1):\n",
    "            enc_below = self.encs[-i - 1]\n",
    "            enc_left = self.encs[-i - 2]\n",
    "            dec = Decoder(enc_left.out_chs + enc_below.out_chs,\n",
    "                          enc_left.out_chs,\n",
    "                          kernel_size,\n",
    "                          padding,\n",
    "                          scale_factor,\n",
    "                          apply_dropout=i < depth // 2)\n",
    "            self.decs.append(dec)\n",
    "\n",
    "        self.output_layer = nn.Conv2d(self.decs[-1].out_chs,\n",
    "                                      out_chs,\n",
    "                                      kernel_size=1,\n",
    "                                      padding=0)\n",
    "\n",
    "    def forward(self, x):\n",
    "        skips = []\n",
    "        for i in range(self.depth):\n",
    "            x = self.encs[i](x)\n",
    "            if i < (self.depth - 1):\n",
    "                skips.append(x)\n",
    "                x = self.pools[i](x)\n",
    "\n",
    "        for i in range(self.depth - 1):\n",
    "            x = self.decs[i](x, skips[-(i + 1)])\n",
    "\n",
    "        return self.output_layer(x)\n",
    "\n",
    "\n",
    "from torchsummary import summary\n",
    "summary(UNet(IN_CHS, OUT_CHS, UNET_DEPTH), (1, 512, 512),\n",
    "        verbose=0,\n",
    "        device='cpu')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### ネットワーク構造の可視化\n",
    "スキップコネクションを確認する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:30.389319Z",
     "iopub.status.busy": "2020-12-24T19:58:30.388320Z",
     "iopub.status.idle": "2020-12-24T19:58:31.082674Z",
     "shell.execute_reply": "2020-12-24T19:58:31.083683Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\r\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n",
       "<!-- Generated by graphviz version 2.38.0 (20140413.2041)\r\n",
       " -->\r\n",
       "<!-- Title: %3 Pages: 1 -->\r\n",
       "<svg width=\"755pt\" height=\"2441pt\"\r\n",
       " viewBox=\"0.00 0.00 754.60 2441.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(0.694848 0.694848) rotate(0) translate(4 3509)\">\r\n",
       "<title>%3</title>\r\n",
       "<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-3509 1082,-3509 1082,4 -4,4\"/>\r\n",
       "<!-- 2648933929888 -->\r\n",
       "<g id=\"node1\" class=\"node\"><title>2648933929888</title>\r\n",
       "<polygon fill=\"#caff70\" stroke=\"black\" points=\"1045,-21 891,-21 891,-0 1045,-0 1045,-21\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"968\" y=\"-7.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933929936 -->\r\n",
       "<g id=\"node2\" class=\"node\"><title>2648933929936</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"912,-85 822,-85 822,-64 912,-64 912,-85\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"867\" y=\"-71.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933929936&#45;&gt;2648933929888 -->\r\n",
       "<g id=\"edge1\" class=\"edge\"><title>2648933929936&#45;&gt;2648933929888</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M882.781,-63.8125C899.087,-53.8028 924.754,-38.0471 943.661,-26.4405\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"945.638,-29.3339 952.33,-21.1195 941.976,-23.3682 945.638,-29.3339\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931472 -->\r\n",
       "<g id=\"node3\" class=\"node\"><title>2648933931472</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"940.5,-149 793.5,-149 793.5,-128 940.5,-128 940.5,-149\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"867\" y=\"-135.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931472&#45;&gt;2648933929936 -->\r\n",
       "<g id=\"edge2\" class=\"edge\"><title>2648933931472&#45;&gt;2648933929936</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M867,-127.813C867,-119.218 867,-106.388 867,-95.5855\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"870.5,-95.3241 867,-85.3241 863.5,-95.3241 870.5,-95.3241\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933930896 -->\r\n",
       "<g id=\"node4\" class=\"node\"><title>2648933930896</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"822,-213 668,-213 668,-192 822,-192 822,-213\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"745\" y=\"-199.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933930896&#45;&gt;2648933931472 -->\r\n",
       "<g id=\"edge3\" class=\"edge\"><title>2648933930896&#45;&gt;2648933931472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M763.795,-191.948C783.886,-181.738 815.958,-165.439 839.019,-153.72\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"840.653,-156.815 847.983,-149.165 837.482,-150.575 840.653,-156.815\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933930800 -->\r\n",
       "<g id=\"node5\" class=\"node\"><title>2648933930800</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"686,-284 596,-284 596,-263 686,-263 686,-284\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"641\" y=\"-270.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933930800&#45;&gt;2648933930896 -->\r\n",
       "<g id=\"edge4\" class=\"edge\"><title>2648933930800&#45;&gt;2648933930896</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M655.461,-262.906C672.769,-251.423 701.958,-232.057 722.287,-218.569\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"724.264,-221.458 730.662,-213.013 720.394,-215.625 724.264,-221.458\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931040 -->\r\n",
       "<g id=\"node6\" class=\"node\"><title>2648933931040</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"714.5,-348 567.5,-348 567.5,-327 714.5,-327 714.5,-348\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"641\" y=\"-334.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931040&#45;&gt;2648933930800 -->\r\n",
       "<g id=\"edge5\" class=\"edge\"><title>2648933931040&#45;&gt;2648933930800</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M641,-326.813C641,-318.218 641,-305.388 641,-294.585\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"644.5,-294.324 641,-284.324 637.5,-294.324 644.5,-294.324\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932480 -->\r\n",
       "<g id=\"node7\" class=\"node\"><title>2648933932480</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"596,-412 442,-412 442,-391 596,-391 596,-412\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"519\" y=\"-398.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932480&#45;&gt;2648933931040 -->\r\n",
       "<g id=\"edge6\" class=\"edge\"><title>2648933932480&#45;&gt;2648933931040</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M537.795,-390.948C557.886,-380.738 589.958,-364.439 613.019,-352.72\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"614.653,-355.815 621.983,-348.165 611.482,-349.575 614.653,-355.815\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931616 -->\r\n",
       "<g id=\"node8\" class=\"node\"><title>2648933931616</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"460,-483 380,-483 380,-462 460,-462 460,-483\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"420\" y=\"-469.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">CatBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931616&#45;&gt;2648933932480 -->\r\n",
       "<g id=\"edge7\" class=\"edge\"><title>2648933931616&#45;&gt;2648933932480</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M433.766,-461.906C450.168,-450.474 477.779,-431.23 497.118,-417.751\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"499.149,-420.602 505.351,-412.013 495.146,-414.859 499.149,-420.602\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932048 -->\r\n",
       "<g id=\"node9\" class=\"node\"><title>2648933932048</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"615,-547 451,-547 451,-526 615,-526 615,-547\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"533\" y=\"-533.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">UpsampleBilinear2DBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932048&#45;&gt;2648933931616 -->\r\n",
       "<g id=\"edge8\" class=\"edge\"><title>2648933932048&#45;&gt;2648933931616</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M515.344,-525.813C496.851,-515.666 467.599,-499.616 446.369,-487.968\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"447.983,-484.861 437.532,-483.119 444.616,-490.998 447.983,-484.861\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932240 -->\r\n",
       "<g id=\"node10\" class=\"node\"><title>2648933932240</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"592,-604 504,-604 504,-583 592,-583 592,-604\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"548\" y=\"-590.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MulBackward0</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932240&#45;&gt;2648933932048 -->\r\n",
       "<g id=\"edge9\" class=\"edge\"><title>2648933932240&#45;&gt;2648933932048</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M545.387,-582.92C543.454,-575.83 540.753,-565.927 538.366,-557.176\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"541.692,-556.068 535.684,-547.341 534.938,-557.909 541.692,-556.068\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932960 -->\r\n",
       "<g id=\"node11\" class=\"node\"><title>2648933932960</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"622,-661 532,-661 532,-640 622,-640 622,-661\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"577\" y=\"-647.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932960&#45;&gt;2648933932240 -->\r\n",
       "<g id=\"edge10\" class=\"edge\"><title>2648933932960&#45;&gt;2648933932240</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M571.949,-639.92C568.087,-632.597 562.643,-622.271 557.92,-613.315\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"560.949,-611.554 553.189,-604.341 554.757,-614.819 560.949,-611.554\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932768 -->\r\n",
       "<g id=\"node12\" class=\"node\"><title>2648933932768</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"657.5,-718 510.5,-718 510.5,-697 657.5,-697 657.5,-718\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"584\" y=\"-704.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932768&#45;&gt;2648933932960 -->\r\n",
       "<g id=\"edge11\" class=\"edge\"><title>2648933932768&#45;&gt;2648933932960</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M582.781,-696.92C581.888,-689.908 580.646,-680.144 579.541,-671.465\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"582.987,-670.819 578.252,-661.341 576.043,-671.703 582.987,-670.819\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932912 -->\r\n",
       "<g id=\"node13\" class=\"node\"><title>2648933932912</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"583,-782 429,-782 429,-761 583,-761 583,-782\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"506\" y=\"-768.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932912&#45;&gt;2648933932768 -->\r\n",
       "<g id=\"edge12\" class=\"edge\"><title>2648933932912&#45;&gt;2648933932768</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M518.188,-760.813C530.437,-751.076 549.526,-735.902 563.998,-724.399\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"566.248,-727.082 571.898,-718.119 561.892,-721.602 566.248,-727.082\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934006640 -->\r\n",
       "<g id=\"node14\" class=\"node\"><title>2648934006640</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"499,-853 409,-853 409,-832 499,-832 499,-853\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"454\" y=\"-839.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934006640&#45;&gt;2648933932912 -->\r\n",
       "<g id=\"edge13\" class=\"edge\"><title>2648934006640&#45;&gt;2648933932912</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M461.23,-831.906C469.302,-821.195 482.543,-803.626 492.535,-790.367\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"495.608,-792.105 498.831,-782.013 490.017,-787.892 495.608,-792.105\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933480000 -->\r\n",
       "<g id=\"node15\" class=\"node\"><title>2648933480000</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"635.5,-917 488.5,-917 488.5,-896 635.5,-896 635.5,-917\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"562\" y=\"-903.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933480000&#45;&gt;2648934006640 -->\r\n",
       "<g id=\"edge14\" class=\"edge\"><title>2648933480000&#45;&gt;2648934006640</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M545.125,-895.813C527.53,-885.712 499.743,-869.76 479.476,-858.125\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"481.172,-855.063 470.757,-853.119 477.686,-861.134 481.172,-855.063\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933480048 -->\r\n",
       "<g id=\"node16\" class=\"node\"><title>2648933480048</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"578,-981 424,-981 424,-960 578,-960 578,-981\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"501\" y=\"-967.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933480048&#45;&gt;2648933480000 -->\r\n",
       "<g id=\"edge15\" class=\"edge\"><title>2648933480048&#45;&gt;2648933480000</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M510.531,-959.813C519.788,-950.404 534.039,-935.919 545.2,-924.575\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"547.816,-926.907 552.334,-917.324 542.826,-921.998 547.816,-926.907\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933480096 -->\r\n",
       "<g id=\"node17\" class=\"node\"><title>2648933480096</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"495,-1052 415,-1052 415,-1031 495,-1031 495,-1052\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"455\" y=\"-1038.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">CatBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933480096&#45;&gt;2648933480048 -->\r\n",
       "<g id=\"edge16\" class=\"edge\"><title>2648933480096&#45;&gt;2648933480048</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M461.396,-1030.91C468.537,-1020.19 480.249,-1002.63 489.089,-989.367\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"492.023,-991.275 494.658,-981.013 486.199,-987.392 492.023,-991.275\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648215942864 -->\r\n",
       "<g id=\"node18\" class=\"node\"><title>2648215942864</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"705,-1116 541,-1116 541,-1095 705,-1095 705,-1116\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"623\" y=\"-1102.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">UpsampleBilinear2DBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648215942864&#45;&gt;2648933480096 -->\r\n",
       "<g id=\"edge17\" class=\"edge\"><title>2648215942864&#45;&gt;2648933480096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M597.118,-1094.95C568.508,-1084.39 522.253,-1067.32 490.325,-1055.54\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"491.505,-1052.24 480.911,-1052.06 489.081,-1058.81 491.505,-1052.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934031264 -->\r\n",
       "<g id=\"node19\" class=\"node\"><title>2648934031264</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"682,-1173 594,-1173 594,-1152 682,-1152 682,-1173\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"638\" y=\"-1159.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MulBackward0</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934031264&#45;&gt;2648215942864 -->\r\n",
       "<g id=\"edge18\" class=\"edge\"><title>2648934031264&#45;&gt;2648215942864</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M635.387,-1151.92C633.454,-1144.83 630.753,-1134.93 628.366,-1126.18\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"631.692,-1125.07 625.684,-1116.34 624.938,-1126.91 631.692,-1125.07\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029728 -->\r\n",
       "<g id=\"node20\" class=\"node\"><title>2648934029728</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"712,-1230 622,-1230 622,-1209 712,-1209 712,-1230\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"667\" y=\"-1216.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029728&#45;&gt;2648934031264 -->\r\n",
       "<g id=\"edge19\" class=\"edge\"><title>2648934029728&#45;&gt;2648934031264</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M661.949,-1208.92C658.087,-1201.6 652.643,-1191.27 647.92,-1182.31\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"650.949,-1180.55 643.189,-1173.34 644.757,-1183.82 650.949,-1180.55\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030160 -->\r\n",
       "<g id=\"node21\" class=\"node\"><title>2648934030160</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"747.5,-1287 600.5,-1287 600.5,-1266 747.5,-1266 747.5,-1287\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"674\" y=\"-1273.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030160&#45;&gt;2648934029728 -->\r\n",
       "<g id=\"edge20\" class=\"edge\"><title>2648934030160&#45;&gt;2648934029728</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M672.781,-1265.92C671.888,-1258.91 670.646,-1249.14 669.541,-1240.47\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"672.987,-1239.82 668.252,-1230.34 666.043,-1240.7 672.987,-1239.82\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030784 -->\r\n",
       "<g id=\"node22\" class=\"node\"><title>2648934030784</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"674,-1351 520,-1351 520,-1330 674,-1330 674,-1351\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"597\" y=\"-1337.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030784&#45;&gt;2648934030160 -->\r\n",
       "<g id=\"edge21\" class=\"edge\"><title>2648934030784&#45;&gt;2648934030160</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M609.031,-1329.81C621.124,-1320.08 639.968,-1304.9 654.254,-1293.4\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"656.459,-1296.12 662.053,-1287.12 652.069,-1290.66 656.459,-1296.12\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934027520 -->\r\n",
       "<g id=\"node23\" class=\"node\"><title>2648934027520</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"589,-1422 499,-1422 499,-1401 589,-1401 589,-1422\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"544\" y=\"-1408.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934027520&#45;&gt;2648934030784 -->\r\n",
       "<g id=\"edge22\" class=\"edge\"><title>2648934027520&#45;&gt;2648934030784</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M551.369,-1400.91C559.676,-1390.09 573.351,-1372.29 583.569,-1358.99\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"586.377,-1361.08 589.693,-1351.01 580.826,-1356.81 586.377,-1361.08\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030688 -->\r\n",
       "<g id=\"node24\" class=\"node\"><title>2648934030688</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"728.5,-1486 581.5,-1486 581.5,-1465 728.5,-1465 728.5,-1486\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"655\" y=\"-1472.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030688&#45;&gt;2648934027520 -->\r\n",
       "<g id=\"edge23\" class=\"edge\"><title>2648934030688&#45;&gt;2648934027520</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M637.656,-1464.81C619.573,-1454.71 591.014,-1438.76 570.184,-1427.13\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"571.659,-1423.94 561.222,-1422.12 568.246,-1430.05 571.659,-1423.94\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030448 -->\r\n",
       "<g id=\"node25\" class=\"node\"><title>2648934030448</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"671,-1550 517,-1550 517,-1529 671,-1529 671,-1550\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"594\" y=\"-1536.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030448&#45;&gt;2648934030688 -->\r\n",
       "<g id=\"edge24\" class=\"edge\"><title>2648934030448&#45;&gt;2648934030688</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M603.531,-1528.81C612.788,-1519.4 627.039,-1504.92 638.2,-1493.58\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"640.816,-1495.91 645.334,-1486.32 635.826,-1491 640.816,-1495.91\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030496 -->\r\n",
       "<g id=\"node26\" class=\"node\"><title>2648934030496</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"585,-1621 505,-1621 505,-1600 585,-1600 585,-1621\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"545\" y=\"-1607.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">CatBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030496&#45;&gt;2648934030448 -->\r\n",
       "<g id=\"edge25\" class=\"edge\"><title>2648934030496&#45;&gt;2648934030448</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M551.813,-1599.91C559.42,-1589.19 571.896,-1571.63 581.312,-1558.37\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"584.308,-1560.19 587.245,-1550.01 578.601,-1556.14 584.308,-1560.19\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028240 -->\r\n",
       "<g id=\"node27\" class=\"node\"><title>2648934028240</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"795,-1685 631,-1685 631,-1664 795,-1664 795,-1685\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"713\" y=\"-1671.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">UpsampleBilinear2DBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028240&#45;&gt;2648934030496 -->\r\n",
       "<g id=\"edge26\" class=\"edge\"><title>2648934028240&#45;&gt;2648934030496</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M687.118,-1663.95C658.508,-1653.39 612.253,-1636.32 580.325,-1624.54\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"581.505,-1621.24 570.911,-1621.06 579.081,-1627.81 581.505,-1621.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029968 -->\r\n",
       "<g id=\"node28\" class=\"node\"><title>2648934029968</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"773,-1742 683,-1742 683,-1721 773,-1721 773,-1742\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"728\" y=\"-1728.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029968&#45;&gt;2648934028240 -->\r\n",
       "<g id=\"edge27\" class=\"edge\"><title>2648934029968&#45;&gt;2648934028240</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M725.387,-1720.92C723.454,-1713.83 720.753,-1703.93 718.366,-1695.18\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"721.692,-1694.07 715.684,-1685.34 714.938,-1695.91 721.692,-1694.07\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029920 -->\r\n",
       "<g id=\"node29\" class=\"node\"><title>2648934029920</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"830.5,-1799 683.5,-1799 683.5,-1778 830.5,-1778 830.5,-1799\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"757\" y=\"-1785.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029920&#45;&gt;2648934029968 -->\r\n",
       "<g id=\"edge28\" class=\"edge\"><title>2648934029920&#45;&gt;2648934029968</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M751.949,-1777.92C748.087,-1770.6 742.643,-1760.27 737.92,-1751.31\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"740.949,-1749.55 733.189,-1742.34 734.757,-1752.82 740.949,-1749.55\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029440 -->\r\n",
       "<g id=\"node30\" class=\"node\"><title>2648934029440</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"764,-1863 610,-1863 610,-1842 764,-1842 764,-1863\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"687\" y=\"-1849.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029440&#45;&gt;2648934029920 -->\r\n",
       "<g id=\"edge29\" class=\"edge\"><title>2648934029440&#45;&gt;2648934029920</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M697.938,-1841.81C708.662,-1832.31 725.229,-1817.64 738.09,-1806.25\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"740.743,-1808.57 745.908,-1799.32 736.102,-1803.33 740.743,-1808.57\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030112 -->\r\n",
       "<g id=\"node31\" class=\"node\"><title>2648934030112</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"684,-1934 594,-1934 594,-1913 684,-1913 684,-1934\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"639\" y=\"-1920.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030112&#45;&gt;2648934029440 -->\r\n",
       "<g id=\"edge30\" class=\"edge\"><title>2648934030112&#45;&gt;2648934029440</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M645.674,-1912.91C653.125,-1902.19 665.347,-1884.63 674.571,-1871.37\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"677.545,-1873.22 680.382,-1863.01 671.799,-1869.22 677.545,-1873.22\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029632 -->\r\n",
       "<g id=\"node32\" class=\"node\"><title>2648934029632</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"867.5,-1998 720.5,-1998 720.5,-1977 867.5,-1977 867.5,-1998\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"794\" y=\"-1984.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029632&#45;&gt;2648934030112 -->\r\n",
       "<g id=\"edge31\" class=\"edge\"><title>2648934029632&#45;&gt;2648934030112</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M770.121,-1976.95C743.952,-1966.48 701.784,-1949.61 672.356,-1937.84\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.491,-1934.53 662.906,-1934.06 670.891,-1941.03 673.491,-1934.53\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934031168 -->\r\n",
       "<g id=\"node33\" class=\"node\"><title>2648934031168</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"810,-2062 656,-2062 656,-2041 810,-2041 810,-2062\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"733\" y=\"-2048.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934031168&#45;&gt;2648934029632 -->\r\n",
       "<g id=\"edge32\" class=\"edge\"><title>2648934031168&#45;&gt;2648934029632</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M742.531,-2040.81C751.788,-2031.4 766.039,-2016.92 777.2,-2005.58\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"779.816,-2007.91 784.334,-1998.32 774.826,-2003 779.816,-2007.91\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029152 -->\r\n",
       "<g id=\"node34\" class=\"node\"><title>2648934029152</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"747,-2133 573,-2133 573,-2112 747,-2112 747,-2133\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"660\" y=\"-2119.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MaxPool2DWithIndicesBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029152&#45;&gt;2648934031168 -->\r\n",
       "<g id=\"edge33\" class=\"edge\"><title>2648934029152&#45;&gt;2648934031168</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M670.15,-2111.91C681.809,-2100.89 701.148,-2082.61 715.3,-2069.23\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"718.073,-2071.43 722.936,-2062.01 713.264,-2066.34 718.073,-2071.43\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029344 -->\r\n",
       "<g id=\"node35\" class=\"node\"><title>2648934029344</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"705,-2197 615,-2197 615,-2176 705,-2176 705,-2197\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"660\" y=\"-2183.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029344&#45;&gt;2648934030496 -->\r\n",
       "<g id=\"edge86\" class=\"edge\"><title>2648934029344&#45;&gt;2648934030496</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M621.093,-2175.97C601.188,-2169.15 578.22,-2157.91 564,-2140 539.256,-2108.83 545,-2092.3 545,-2052.5 545,-2052.5 545,-2052.5 545,-1730.5 545,-1695.52 545,-1654.76 545,-1631.17\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"548.5,-1631.06 545,-1621.06 541.5,-1631.06 548.5,-1631.06\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029344&#45;&gt;2648934029152 -->\r\n",
       "<g id=\"edge34\" class=\"edge\"><title>2648934029344&#45;&gt;2648934029152</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M660,-2175.81C660,-2167.22 660,-2154.39 660,-2143.59\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"663.5,-2143.32 660,-2133.32 656.5,-2143.32 663.5,-2143.32\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028096 -->\r\n",
       "<g id=\"node36\" class=\"node\"><title>2648934028096</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"744.5,-2254 597.5,-2254 597.5,-2233 744.5,-2233 744.5,-2254\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"671\" y=\"-2240.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028096&#45;&gt;2648934029344 -->\r\n",
       "<g id=\"edge35\" class=\"edge\"><title>2648934028096&#45;&gt;2648934029344</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M669.084,-2232.92C667.666,-2225.83 665.685,-2215.93 663.935,-2207.18\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"667.361,-2206.46 661.968,-2197.34 660.497,-2207.83 667.361,-2206.46\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028576 -->\r\n",
       "<g id=\"node37\" class=\"node\"><title>2648934028576</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"673,-2318 519,-2318 519,-2297 673,-2297 673,-2318\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"596\" y=\"-2304.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028576&#45;&gt;2648934028096 -->\r\n",
       "<g id=\"edge36\" class=\"edge\"><title>2648934028576&#45;&gt;2648934028096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M607.719,-2296.81C619.319,-2287.22 637.298,-2272.36 651.132,-2260.92\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"653.639,-2263.39 659.116,-2254.32 649.179,-2258 653.639,-2263.39\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934027904 -->\r\n",
       "<g id=\"node38\" class=\"node\"><title>2648934027904</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"594,-2389 504,-2389 504,-2368 594,-2368 594,-2389\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"549\" y=\"-2375.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934027904&#45;&gt;2648934028576 -->\r\n",
       "<g id=\"edge37\" class=\"edge\"><title>2648934027904&#45;&gt;2648934028576</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M555.535,-2367.91C562.831,-2357.19 574.798,-2339.63 583.83,-2326.37\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"586.783,-2328.25 589.52,-2318.01 580.998,-2324.31 586.783,-2328.25\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934027472 -->\r\n",
       "<g id=\"node39\" class=\"node\"><title>2648934027472</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"777.5,-2453 630.5,-2453 630.5,-2432 777.5,-2432 777.5,-2453\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"704\" y=\"-2439.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934027472&#45;&gt;2648934027904 -->\r\n",
       "<g id=\"edge38\" class=\"edge\"><title>2648934027472&#45;&gt;2648934027904</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M680.121,-2431.95C653.952,-2421.48 611.784,-2404.61 582.356,-2392.84\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"583.491,-2389.53 572.906,-2389.06 580.891,-2396.03 583.491,-2389.53\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934027568 -->\r\n",
       "<g id=\"node40\" class=\"node\"><title>2648934027568</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"720,-2517 566,-2517 566,-2496 720,-2496 720,-2517\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"643\" y=\"-2503.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934027568&#45;&gt;2648934027472 -->\r\n",
       "<g id=\"edge39\" class=\"edge\"><title>2648934027568&#45;&gt;2648934027472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M652.531,-2495.81C661.788,-2486.4 676.039,-2471.92 687.2,-2460.58\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"689.816,-2462.91 694.334,-2453.32 684.826,-2458 689.816,-2462.91\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028720 -->\r\n",
       "<g id=\"node41\" class=\"node\"><title>2648934028720</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"657,-2588 483,-2588 483,-2567 657,-2567 657,-2588\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"570\" y=\"-2574.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MaxPool2DWithIndicesBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028720&#45;&gt;2648934027568 -->\r\n",
       "<g id=\"edge40\" class=\"edge\"><title>2648934028720&#45;&gt;2648934027568</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M580.15,-2566.91C591.809,-2555.89 611.148,-2537.61 625.3,-2524.23\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"628.073,-2526.43 632.936,-2517.01 623.264,-2521.34 628.073,-2526.43\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648518050720 -->\r\n",
       "<g id=\"node42\" class=\"node\"><title>2648518050720</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"615,-2652 525,-2652 525,-2631 615,-2631 615,-2652\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"570\" y=\"-2638.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648518050720&#45;&gt;2648933480096 -->\r\n",
       "<g id=\"edge95\" class=\"edge\"><title>2648518050720&#45;&gt;2648933480096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M531.093,-2630.97C511.188,-2624.15 488.22,-2612.91 474,-2595 449.256,-2563.83 455,-2547.3 455,-2507.5 455,-2507.5 455,-2507.5 455,-1161.5 455,-1126.52 455,-1085.76 455,-1062.17\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"458.5,-1062.06 455,-1052.06 451.5,-1062.06 458.5,-1062.06\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648518050720&#45;&gt;2648934028720 -->\r\n",
       "<g id=\"edge41\" class=\"edge\"><title>2648518050720&#45;&gt;2648934028720</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M570,-2630.81C570,-2622.22 570,-2609.39 570,-2598.59\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"573.5,-2598.32 570,-2588.32 566.5,-2598.32 573.5,-2598.32\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982320 -->\r\n",
       "<g id=\"node43\" class=\"node\"><title>2648933982320</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"654.5,-2709 507.5,-2709 507.5,-2688 654.5,-2688 654.5,-2709\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"581\" y=\"-2695.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982320&#45;&gt;2648518050720 -->\r\n",
       "<g id=\"edge42\" class=\"edge\"><title>2648933982320&#45;&gt;2648518050720</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M579.084,-2687.92C577.666,-2680.83 575.685,-2670.93 573.935,-2662.18\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"577.361,-2661.46 571.968,-2652.34 570.497,-2662.83 577.361,-2661.46\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982416 -->\r\n",
       "<g id=\"node44\" class=\"node\"><title>2648933982416</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"583,-2773 429,-2773 429,-2752 583,-2752 583,-2773\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"506\" y=\"-2759.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982416&#45;&gt;2648933982320 -->\r\n",
       "<g id=\"edge43\" class=\"edge\"><title>2648933982416&#45;&gt;2648933982320</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M517.719,-2751.81C529.319,-2742.22 547.298,-2727.36 561.132,-2715.92\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"563.639,-2718.39 569.116,-2709.32 559.179,-2713 563.639,-2718.39\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982800 -->\r\n",
       "<g id=\"node45\" class=\"node\"><title>2648933982800</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"504,-2844 414,-2844 414,-2823 504,-2823 504,-2844\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"459\" y=\"-2830.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982800&#45;&gt;2648933982416 -->\r\n",
       "<g id=\"edge44\" class=\"edge\"><title>2648933982800&#45;&gt;2648933982416</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M465.535,-2822.91C472.831,-2812.19 484.798,-2794.63 493.83,-2781.37\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"496.783,-2783.25 499.52,-2773.01 490.998,-2779.31 496.783,-2783.25\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933983424 -->\r\n",
       "<g id=\"node46\" class=\"node\"><title>2648933983424</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"687.5,-2908 540.5,-2908 540.5,-2887 687.5,-2887 687.5,-2908\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"614\" y=\"-2894.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933983424&#45;&gt;2648933982800 -->\r\n",
       "<g id=\"edge45\" class=\"edge\"><title>2648933983424&#45;&gt;2648933982800</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M590.121,-2886.95C563.952,-2876.48 521.784,-2859.61 492.356,-2847.84\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"493.491,-2844.53 482.906,-2844.06 490.891,-2851.03 493.491,-2844.53\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933983520 -->\r\n",
       "<g id=\"node47\" class=\"node\"><title>2648933983520</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"630,-2972 476,-2972 476,-2951 630,-2951 630,-2972\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"553\" y=\"-2958.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933983520&#45;&gt;2648933983424 -->\r\n",
       "<g id=\"edge46\" class=\"edge\"><title>2648933983520&#45;&gt;2648933983424</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M562.531,-2950.81C571.788,-2941.4 586.039,-2926.92 597.2,-2915.58\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"599.816,-2917.91 604.334,-2908.32 594.826,-2913 599.816,-2917.91\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984528 -->\r\n",
       "<g id=\"node48\" class=\"node\"><title>2648933984528</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"567,-3043 393,-3043 393,-3022 567,-3022 567,-3043\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"480\" y=\"-3029.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MaxPool2DWithIndicesBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984528&#45;&gt;2648933983520 -->\r\n",
       "<g id=\"edge47\" class=\"edge\"><title>2648933984528&#45;&gt;2648933983520</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M490.15,-3021.91C501.809,-3010.89 521.148,-2992.61 535.3,-2979.23\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"538.073,-2981.43 542.936,-2972.01 533.264,-2976.34 538.073,-2981.43\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932096 -->\r\n",
       "<g id=\"node49\" class=\"node\"><title>2648933932096</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"467,-3107 377,-3107 377,-3086 467,-3086 467,-3107\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"422\" y=\"-3093.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933932096&#45;&gt;2648933931616 -->\r\n",
       "<g id=\"edge104\" class=\"edge\"><title>2648933932096&#45;&gt;2648933931616</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M411.338,-3085.69C402.662,-3077.11 390.782,-3063.87 384,-3050 366.518,-3014.25 365,-3002.3 365,-2962.5 365,-2962.5 365,-2962.5 365,-592.5 365,-553.693 389.399,-513.79 405.695,-491.467\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"408.64,-493.375 411.885,-483.289 403.059,-489.151 408.64,-493.375\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933932096&#45;&gt;2648933984528 -->\r\n",
       "<g id=\"edge48\" class=\"edge\"><title>2648933932096&#45;&gt;2648933984528</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M431.063,-3085.81C439.779,-3076.49 453.154,-3062.2 463.72,-3050.9\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"466.534,-3053.02 470.81,-3043.32 461.422,-3048.24 466.534,-3053.02\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985488 -->\r\n",
       "<g id=\"node50\" class=\"node\"><title>2648933985488</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"495.5,-3164 348.5,-3164 348.5,-3143 495.5,-3143 495.5,-3164\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"422\" y=\"-3150.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985488&#45;&gt;2648933932096 -->\r\n",
       "<g id=\"edge49\" class=\"edge\"><title>2648933985488&#45;&gt;2648933932096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M422,-3142.92C422,-3135.91 422,-3126.14 422,-3117.47\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"425.5,-3117.34 422,-3107.34 418.5,-3117.34 425.5,-3117.34\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933986064 -->\r\n",
       "<g id=\"node51\" class=\"node\"><title>2648933986064</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"377,-3228 223,-3228 223,-3207 377,-3207 377,-3228\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"300\" y=\"-3214.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933986064&#45;&gt;2648933985488 -->\r\n",
       "<g id=\"edge50\" class=\"edge\"><title>2648933986064&#45;&gt;2648933985488</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M318.795,-3206.95C338.886,-3196.74 370.958,-3180.44 394.019,-3168.72\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"395.653,-3171.82 402.983,-3164.16 392.482,-3165.57 395.653,-3171.82\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984720 -->\r\n",
       "<g id=\"node52\" class=\"node\"><title>2648933984720</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"244,-3299 154,-3299 154,-3278 244,-3278 244,-3299\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"199\" y=\"-3285.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">ReluBackward1</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984720&#45;&gt;2648933986064 -->\r\n",
       "<g id=\"edge51\" class=\"edge\"><title>2648933984720&#45;&gt;2648933986064</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M213.044,-3277.91C229.777,-3266.47 257.946,-3247.23 277.676,-3233.75\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"279.793,-3236.54 286.076,-3228.01 275.844,-3230.76 279.793,-3236.54\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933986256 -->\r\n",
       "<g id=\"node53\" class=\"node\"><title>2648933986256</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"272.5,-3363 125.5,-3363 125.5,-3342 272.5,-3342 272.5,-3363\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"199\" y=\"-3349.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">NativeBatchNormBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933986256&#45;&gt;2648933984720 -->\r\n",
       "<g id=\"edge52\" class=\"edge\"><title>2648933986256&#45;&gt;2648933984720</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M199,-3341.81C199,-3333.22 199,-3320.39 199,-3309.59\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"202.5,-3309.32 199,-3299.32 195.5,-3309.32 202.5,-3309.32\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984912 -->\r\n",
       "<g id=\"node54\" class=\"node\"><title>2648933984912</title>\r\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"154,-3427 0,-3427 0,-3406 154,-3406 154,-3427\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"77\" y=\"-3413.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\">MkldnnConvolutionBackward</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984912&#45;&gt;2648933986256 -->\r\n",
       "<g id=\"edge53\" class=\"edge\"><title>2648933984912&#45;&gt;2648933986256</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M95.7951,-3405.95C115.886,-3395.74 147.958,-3379.44 171.019,-3367.72\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"172.653,-3370.82 179.983,-3363.16 169.482,-3364.57 172.653,-3370.82\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985920 -->\r\n",
       "<g id=\"node55\" class=\"node\"><title>2648933985920</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"71.5,-3505 2.5,-3505 2.5,-3470 71.5,-3470 71.5,-3505\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"37\" y=\"-3477.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (8, 1, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985920&#45;&gt;2648933984912 -->\r\n",
       "<g id=\"edge54\" class=\"edge\"><title>2648933985920&#45;&gt;2648933984912</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M46.6829,-3469.8C52.6308,-3459.54 60.2553,-3446.38 66.37,-3435.84\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"69.4823,-3437.45 71.4697,-3427.04 63.4263,-3433.94 69.4823,-3437.45\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985968 -->\r\n",
       "<g id=\"node56\" class=\"node\"><title>2648933985968</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"144,-3505 90,-3505 90,-3470 144,-3470 144,-3505\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"117\" y=\"-3477.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (8)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985968&#45;&gt;2648933984912 -->\r\n",
       "<g id=\"edge55\" class=\"edge\"><title>2648933985968&#45;&gt;2648933984912</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M107.317,-3469.8C101.369,-3459.54 93.7447,-3446.38 87.63,-3435.84\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"90.5737,-3433.94 82.5303,-3427.04 84.5177,-3437.45 90.5737,-3433.94\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985824 -->\r\n",
       "<g id=\"node57\" class=\"node\"><title>2648933985824</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"226,-3434 172,-3434 172,-3399 226,-3399 226,-3434\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"199\" y=\"-3406.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (8)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985824&#45;&gt;2648933986256 -->\r\n",
       "<g id=\"edge56\" class=\"edge\"><title>2648933985824&#45;&gt;2648933986256</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M199,-3398.89C199,-3390.99 199,-3381.5 199,-3373.25\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"202.5,-3373.02 199,-3363.02 195.5,-3373.02 202.5,-3373.02\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985728 -->\r\n",
       "<g id=\"node58\" class=\"node\"><title>2648933985728</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"298,-3434 244,-3434 244,-3399 298,-3399 298,-3434\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"271\" y=\"-3406.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (8)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985728&#45;&gt;2648933986256 -->\r\n",
       "<g id=\"edge57\" class=\"edge\"><title>2648933985728&#45;&gt;2648933986256</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M251.705,-3398.89C241.187,-3389.83 228.225,-3378.67 217.788,-3369.68\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"219.914,-3366.89 210.053,-3363.02 215.347,-3372.2 219.914,-3366.89\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984480 -->\r\n",
       "<g id=\"node59\" class=\"node\"><title>2648933984480</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"337.5,-3306 262.5,-3306 262.5,-3271 337.5,-3271 337.5,-3306\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"300\" y=\"-3278.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16, 8, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984480&#45;&gt;2648933986064 -->\r\n",
       "<g id=\"edge58\" class=\"edge\"><title>2648933984480&#45;&gt;2648933986064</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M300,-3270.8C300,-3260.96 300,-3248.45 300,-3238.14\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"303.5,-3238.04 300,-3228.04 296.5,-3238.04 303.5,-3238.04\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933985296 -->\r\n",
       "<g id=\"node60\" class=\"node\"><title>2648933985296</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"410,-3306 356,-3306 356,-3271 410,-3271 410,-3306\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"383\" y=\"-3278.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933985296&#45;&gt;2648933986064 -->\r\n",
       "<g id=\"edge59\" class=\"edge\"><title>2648933985296&#45;&gt;2648933986064</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M362.908,-3270.8C349.684,-3259.8 332.467,-3245.49 319.389,-3234.62\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"321.403,-3231.74 311.475,-3228.04 316.928,-3237.12 321.403,-3231.74\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933986112 -->\r\n",
       "<g id=\"node61\" class=\"node\"><title>2648933986112</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"449,-3235 395,-3235 395,-3200 449,-3200 449,-3235\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"422\" y=\"-3207.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933986112&#45;&gt;2648933985488 -->\r\n",
       "<g id=\"edge60\" class=\"edge\"><title>2648933986112&#45;&gt;2648933985488</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M422,-3199.89C422,-3191.99 422,-3182.5 422,-3174.25\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"425.5,-3174.02 422,-3164.02 418.5,-3174.02 425.5,-3174.02\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933986160 -->\r\n",
       "<g id=\"node62\" class=\"node\"><title>2648933986160</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"521,-3235 467,-3235 467,-3200 521,-3200 521,-3235\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"494\" y=\"-3207.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933986160&#45;&gt;2648933985488 -->\r\n",
       "<g id=\"edge61\" class=\"edge\"><title>2648933986160&#45;&gt;2648933985488</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M474.705,-3199.89C464.187,-3190.83 451.225,-3179.67 440.788,-3170.68\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"442.914,-3167.89 433.053,-3164.02 438.347,-3173.2 442.914,-3167.89\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984576 -->\r\n",
       "<g id=\"node63\" class=\"node\"><title>2648933984576</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"666.5,-3050 585.5,-3050 585.5,-3015 666.5,-3015 666.5,-3050\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"626\" y=\"-3022.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16, 16, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984576&#45;&gt;2648933983520 -->\r\n",
       "<g id=\"edge62\" class=\"edge\"><title>2648933984576&#45;&gt;2648933983520</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M608.329,-3014.8C596.809,-3003.91 581.844,-2989.76 570.382,-2978.93\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"572.764,-2976.37 563.093,-2972.04 567.956,-2981.45 572.764,-2976.37\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984960 -->\r\n",
       "<g id=\"node64\" class=\"node\"><title>2648933984960</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"739,-3050 685,-3050 685,-3015 739,-3015 739,-3050\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"712\" y=\"-3022.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984960&#45;&gt;2648933983520 -->\r\n",
       "<g id=\"edge63\" class=\"edge\"><title>2648933984960&#45;&gt;2648933983520</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M684.94,-3019.38C681.595,-3017.9 678.221,-3016.41 675,-3015 644.422,-3001.6 609.409,-2986.57 584.758,-2976.03\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"586.095,-2972.8 575.524,-2972.09 583.346,-2979.23 586.095,-2972.8\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933983952 -->\r\n",
       "<g id=\"node65\" class=\"node\"><title>2648933983952</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"702,-2979 648,-2979 648,-2944 702,-2944 702,-2979\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"675\" y=\"-2951.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933983952&#45;&gt;2648933983424 -->\r\n",
       "<g id=\"edge64\" class=\"edge\"><title>2648933983952&#45;&gt;2648933983424</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M658.653,-2943.89C649.919,-2935.01 639.194,-2924.11 630.445,-2915.21\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"632.873,-2912.69 623.364,-2908.02 627.883,-2917.6 632.873,-2912.69\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933984000 -->\r\n",
       "<g id=\"node66\" class=\"node\"><title>2648933984000</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"774,-2979 720,-2979 720,-2944 774,-2944 774,-2979\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"747\" y=\"-2951.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933984000&#45;&gt;2648933983424 -->\r\n",
       "<g id=\"edge65\" class=\"edge\"><title>2648933984000&#45;&gt;2648933983424</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M719.765,-2947.8C697.687,-2937.51 666.614,-2923.03 643.861,-2912.42\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"645.212,-2909.19 634.669,-2908.14 642.254,-2915.53 645.212,-2909.19\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982896 -->\r\n",
       "<g id=\"node67\" class=\"node\"><title>2648933982896</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"603.5,-2851 522.5,-2851 522.5,-2816 603.5,-2816 603.5,-2851\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"563\" y=\"-2823.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32, 16, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982896&#45;&gt;2648933982416 -->\r\n",
       "<g id=\"edge66\" class=\"edge\"><title>2648933982896&#45;&gt;2648933982416</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M549.202,-2815.8C540.467,-2805.22 529.194,-2791.58 520.354,-2780.88\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"522.948,-2778.52 513.881,-2773.04 517.551,-2782.98 522.948,-2778.52\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982944 -->\r\n",
       "<g id=\"node68\" class=\"node\"><title>2648933982944</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"676,-2851 622,-2851 622,-2816 676,-2816 676,-2851\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"649\" y=\"-2823.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982944&#45;&gt;2648933982416 -->\r\n",
       "<g id=\"edge67\" class=\"edge\"><title>2648933982944&#45;&gt;2648933982416</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M621.766,-2819.36C596.904,-2807.36 560.27,-2789.69 534.899,-2777.44\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"536.302,-2774.24 525.774,-2773.04 533.26,-2780.54 536.302,-2774.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982464 -->\r\n",
       "<g id=\"node69\" class=\"node\"><title>2648933982464</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"655,-2780 601,-2780 601,-2745 655,-2745 655,-2780\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"628\" y=\"-2752.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982464&#45;&gt;2648933982320 -->\r\n",
       "<g id=\"edge68\" class=\"edge\"><title>2648933982464&#45;&gt;2648933982320</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M615.405,-2744.89C608.879,-2736.28 600.911,-2725.77 594.288,-2717.03\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"597.045,-2714.87 588.215,-2709.02 591.467,-2719.1 597.045,-2714.87\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933982512 -->\r\n",
       "<g id=\"node70\" class=\"node\"><title>2648933982512</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"727,-2780 673,-2780 673,-2745 727,-2745 727,-2780\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"700\" y=\"-2752.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933982512&#45;&gt;2648933982320 -->\r\n",
       "<g id=\"edge69\" class=\"edge\"><title>2648933982512&#45;&gt;2648933982320</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M672.997,-2747.43C653.668,-2737.36 627.738,-2723.85 608.334,-2713.74\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"609.876,-2710.6 599.39,-2709.08 606.641,-2716.81 609.876,-2710.6\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029536 -->\r\n",
       "<g id=\"node71\" class=\"node\"><title>2648934029536</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"756.5,-2595 675.5,-2595 675.5,-2560 756.5,-2560 756.5,-2595\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"716\" y=\"-2567.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32, 32, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029536&#45;&gt;2648934027568 -->\r\n",
       "<g id=\"edge70\" class=\"edge\"><title>2648934029536&#45;&gt;2648934027568</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M698.329,-2559.8C686.809,-2548.91 671.844,-2534.76 660.382,-2523.93\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"662.764,-2521.37 653.093,-2517.04 657.956,-2526.45 662.764,-2521.37\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933986016 -->\r\n",
       "<g id=\"node72\" class=\"node\"><title>2648933986016</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"829,-2595 775,-2595 775,-2560 829,-2560 829,-2595\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"802\" y=\"-2567.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933986016&#45;&gt;2648934027568 -->\r\n",
       "<g id=\"edge71\" class=\"edge\"><title>2648933986016&#45;&gt;2648934027568</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M774.94,-2564.38C771.595,-2562.9 768.221,-2561.41 765,-2560 734.422,-2546.6 699.409,-2531.57 674.758,-2521.03\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"676.095,-2517.8 665.524,-2517.09 673.346,-2524.23 676.095,-2517.8\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934027616 -->\r\n",
       "<g id=\"node73\" class=\"node\"><title>2648934027616</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"792,-2524 738,-2524 738,-2489 792,-2489 792,-2524\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"765\" y=\"-2496.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934027616&#45;&gt;2648934027472 -->\r\n",
       "<g id=\"edge72\" class=\"edge\"><title>2648934027616&#45;&gt;2648934027472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M748.653,-2488.89C739.919,-2480.01 729.194,-2469.11 720.445,-2460.21\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"722.873,-2457.69 713.364,-2453.02 717.883,-2462.6 722.873,-2457.69\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028144 -->\r\n",
       "<g id=\"node74\" class=\"node\"><title>2648934028144</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"864,-2524 810,-2524 810,-2489 864,-2489 864,-2524\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"837\" y=\"-2496.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028144&#45;&gt;2648934027472 -->\r\n",
       "<g id=\"edge73\" class=\"edge\"><title>2648934028144&#45;&gt;2648934027472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M809.765,-2492.8C787.687,-2482.51 756.614,-2468.03 733.861,-2457.42\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"735.212,-2454.19 724.669,-2453.14 732.254,-2460.53 735.212,-2454.19\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028048 -->\r\n",
       "<g id=\"node75\" class=\"node\"><title>2648934028048</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"693.5,-2396 612.5,-2396 612.5,-2361 693.5,-2361 693.5,-2396\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"653\" y=\"-2368.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64, 32, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028048&#45;&gt;2648934028576 -->\r\n",
       "<g id=\"edge74\" class=\"edge\"><title>2648934028048&#45;&gt;2648934028576</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M639.202,-2360.8C630.467,-2350.22 619.194,-2336.58 610.354,-2325.88\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"612.948,-2323.52 603.881,-2318.04 607.551,-2327.98 612.948,-2323.52\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028000 -->\r\n",
       "<g id=\"node76\" class=\"node\"><title>2648934028000</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"766,-2396 712,-2396 712,-2361 766,-2361 766,-2396\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"739\" y=\"-2368.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028000&#45;&gt;2648934028576 -->\r\n",
       "<g id=\"edge75\" class=\"edge\"><title>2648934028000&#45;&gt;2648934028576</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M711.766,-2364.36C686.904,-2352.36 650.27,-2334.69 624.899,-2322.44\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"626.302,-2319.24 615.774,-2318.04 623.26,-2325.54 626.302,-2319.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028480 -->\r\n",
       "<g id=\"node77\" class=\"node\"><title>2648934028480</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"745,-2325 691,-2325 691,-2290 745,-2290 745,-2325\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"718\" y=\"-2297.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028480&#45;&gt;2648934028096 -->\r\n",
       "<g id=\"edge76\" class=\"edge\"><title>2648934028480&#45;&gt;2648934028096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M705.405,-2289.89C698.879,-2281.28 690.911,-2270.77 684.288,-2262.03\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"687.045,-2259.87 678.215,-2254.02 681.467,-2264.1 687.045,-2259.87\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934028528 -->\r\n",
       "<g id=\"node78\" class=\"node\"><title>2648934028528</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"817,-2325 763,-2325 763,-2290 817,-2290 817,-2325\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"790\" y=\"-2297.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934028528&#45;&gt;2648934028096 -->\r\n",
       "<g id=\"edge77\" class=\"edge\"><title>2648934028528&#45;&gt;2648934028096</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M762.997,-2292.43C743.668,-2282.36 717.738,-2268.85 698.334,-2258.74\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"699.876,-2255.6 689.39,-2254.08 696.641,-2261.81 699.876,-2255.6\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029056 -->\r\n",
       "<g id=\"node79\" class=\"node\"><title>2648934029056</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"846.5,-2140 765.5,-2140 765.5,-2105 846.5,-2105 846.5,-2140\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"806\" y=\"-2112.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64, 64, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029056&#45;&gt;2648934031168 -->\r\n",
       "<g id=\"edge78\" class=\"edge\"><title>2648934029056&#45;&gt;2648934031168</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M788.329,-2104.8C776.809,-2093.91 761.844,-2079.76 750.382,-2068.93\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"752.764,-2066.37 743.093,-2062.04 747.956,-2071.45 752.764,-2066.37\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029104 -->\r\n",
       "<g id=\"node80\" class=\"node\"><title>2648934029104</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"919,-2140 865,-2140 865,-2105 919,-2105 919,-2140\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"892\" y=\"-2112.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029104&#45;&gt;2648934031168 -->\r\n",
       "<g id=\"edge79\" class=\"edge\"><title>2648934029104&#45;&gt;2648934031168</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M864.94,-2109.38C861.595,-2107.9 858.221,-2106.41 855,-2105 824.422,-2091.6 789.409,-2076.57 764.758,-2066.03\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"766.095,-2062.8 755.524,-2062.09 763.346,-2069.23 766.095,-2062.8\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029824 -->\r\n",
       "<g id=\"node81\" class=\"node\"><title>2648934029824</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"882,-2069 828,-2069 828,-2034 882,-2034 882,-2069\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"855\" y=\"-2041.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029824&#45;&gt;2648934029632 -->\r\n",
       "<g id=\"edge80\" class=\"edge\"><title>2648934029824&#45;&gt;2648934029632</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M838.653,-2033.89C829.919,-2025.01 819.194,-2014.11 810.445,-2005.21\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"812.873,-2002.69 803.364,-1998.02 807.883,-2007.6 812.873,-2002.69\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030640 -->\r\n",
       "<g id=\"node82\" class=\"node\"><title>2648934030640</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"954,-2069 900,-2069 900,-2034 954,-2034 954,-2069\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"927\" y=\"-2041.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030640&#45;&gt;2648934029632 -->\r\n",
       "<g id=\"edge81\" class=\"edge\"><title>2648934030640&#45;&gt;2648934029632</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M899.765,-2037.8C877.687,-2027.51 846.614,-2013.03 823.861,-2002.42\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"825.212,-1999.19 814.669,-1998.14 822.254,-2005.53 825.212,-1999.19\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030256 -->\r\n",
       "<g id=\"node83\" class=\"node\"><title>2648934030256</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"789.5,-1941 702.5,-1941 702.5,-1906 789.5,-1906 789.5,-1941\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"746\" y=\"-1913.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128, 64, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030256&#45;&gt;2648934029440 -->\r\n",
       "<g id=\"edge82\" class=\"edge\"><title>2648934030256&#45;&gt;2648934029440</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M731.718,-1905.8C722.676,-1895.22 711.008,-1881.58 701.857,-1870.88\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"704.316,-1868.37 695.157,-1863.04 698.996,-1872.91 704.316,-1868.37\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029680 -->\r\n",
       "<g id=\"node84\" class=\"node\"><title>2648934029680</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"862,-1941 808,-1941 808,-1906 862,-1906 862,-1941\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"835\" y=\"-1913.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029680&#45;&gt;2648934029440 -->\r\n",
       "<g id=\"edge83\" class=\"edge\"><title>2648934029680&#45;&gt;2648934029440</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M807.855,-1909.84C782.139,-1897.86 743.599,-1879.89 716.988,-1867.48\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"718.311,-1864.24 707.769,-1863.18 715.353,-1870.58 718.311,-1864.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029392 -->\r\n",
       "<g id=\"node85\" class=\"node\"><title>2648934029392</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"836,-1870 782,-1870 782,-1835 836,-1835 836,-1870\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"809\" y=\"-1842.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029392&#45;&gt;2648934029920 -->\r\n",
       "<g id=\"edge84\" class=\"edge\"><title>2648934029392&#45;&gt;2648934029920</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M795.065,-1834.89C787.77,-1826.19 778.846,-1815.55 771.473,-1806.76\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"774.09,-1804.43 764.983,-1799.02 768.727,-1808.93 774.09,-1804.43\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030304 -->\r\n",
       "<g id=\"node86\" class=\"node\"><title>2648934030304</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"908,-1870 854,-1870 854,-1835 908,-1835 908,-1870\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"881\" y=\"-1842.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030304&#45;&gt;2648934029920 -->\r\n",
       "<g id=\"edge85\" class=\"edge\"><title>2648934030304&#45;&gt;2648934029920</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M853.788,-1837.89C833.478,-1827.74 805.804,-1813.9 785.25,-1803.62\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"786.586,-1800.38 776.077,-1799.04 783.456,-1806.64 786.586,-1800.38\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934029872 -->\r\n",
       "<g id=\"node87\" class=\"node\"><title>2648934029872</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"696.5,-1628 603.5,-1628 603.5,-1593 696.5,-1593 696.5,-1628\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"650\" y=\"-1600.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128, 192, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934029872&#45;&gt;2648934030448 -->\r\n",
       "<g id=\"edge87\" class=\"edge\"><title>2648934029872&#45;&gt;2648934030448</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M636.444,-1592.8C627.862,-1582.22 616.787,-1568.58 608.102,-1557.88\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"610.762,-1555.6 601.742,-1550.04 605.327,-1560.01 610.762,-1555.6\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030400 -->\r\n",
       "<g id=\"node88\" class=\"node\"><title>2648934030400</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"769,-1628 715,-1628 715,-1593 769,-1593 769,-1628\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"742\" y=\"-1600.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030400&#45;&gt;2648934030448 -->\r\n",
       "<g id=\"edge88\" class=\"edge\"><title>2648934030400&#45;&gt;2648934030448</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M714.855,-1596.84C689.139,-1584.86 650.599,-1566.89 623.988,-1554.48\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"625.311,-1551.24 614.769,-1550.18 622.353,-1557.58 625.311,-1551.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030928 -->\r\n",
       "<g id=\"node89\" class=\"node\"><title>2648934030928</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"743,-1557 689,-1557 689,-1522 743,-1522 743,-1557\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"716\" y=\"-1529.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030928&#45;&gt;2648934030688 -->\r\n",
       "<g id=\"edge89\" class=\"edge\"><title>2648934030928&#45;&gt;2648934030688</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M699.653,-1521.89C690.919,-1513.01 680.194,-1502.11 671.445,-1493.21\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.873,-1490.69 664.364,-1486.02 668.883,-1495.6 673.873,-1490.69\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030880 -->\r\n",
       "<g id=\"node90\" class=\"node\"><title>2648934030880</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"815,-1557 761,-1557 761,-1522 815,-1522 815,-1557\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"788\" y=\"-1529.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (128)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030880&#45;&gt;2648934030688 -->\r\n",
       "<g id=\"edge90\" class=\"edge\"><title>2648934030880&#45;&gt;2648934030688</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M760.765,-1525.8C738.687,-1515.51 707.614,-1501.03 684.861,-1490.42\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"686.212,-1487.19 675.669,-1486.14 683.254,-1493.53 686.212,-1487.19\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934031312 -->\r\n",
       "<g id=\"node91\" class=\"node\"><title>2648934031312</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"694.5,-1429 607.5,-1429 607.5,-1394 694.5,-1394 694.5,-1429\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"651\" y=\"-1401.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64, 128, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934031312&#45;&gt;2648934030784 -->\r\n",
       "<g id=\"edge91\" class=\"edge\"><title>2648934031312&#45;&gt;2648934030784</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M637.928,-1393.8C629.734,-1383.33 619.184,-1369.85 610.848,-1359.19\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"613.385,-1356.76 604.466,-1351.04 607.873,-1361.07 613.385,-1356.76\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934031120 -->\r\n",
       "<g id=\"node92\" class=\"node\"><title>2648934031120</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"767,-1429 713,-1429 713,-1394 767,-1394 767,-1429\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"740\" y=\"-1401.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934031120&#45;&gt;2648934030784 -->\r\n",
       "<g id=\"edge92\" class=\"edge\"><title>2648934031120&#45;&gt;2648934030784</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M712.766,-1397.36C687.904,-1385.36 651.27,-1367.69 625.899,-1355.44\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"627.302,-1352.24 616.774,-1351.04 624.26,-1358.54 627.302,-1352.24\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934030736 -->\r\n",
       "<g id=\"node93\" class=\"node\"><title>2648934030736</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"746,-1358 692,-1358 692,-1323 746,-1323 746,-1358\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"719\" y=\"-1330.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934030736&#45;&gt;2648934030160 -->\r\n",
       "<g id=\"edge93\" class=\"edge\"><title>2648934030736&#45;&gt;2648934030160</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M706.941,-1322.89C700.758,-1314.37 693.223,-1303.98 686.921,-1295.3\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"689.615,-1293.05 680.908,-1287.02 683.949,-1297.17 689.615,-1293.05\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934031216 -->\r\n",
       "<g id=\"node94\" class=\"node\"><title>2648934031216</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"818,-1358 764,-1358 764,-1323 818,-1323 818,-1358\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"791\" y=\"-1330.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934031216&#45;&gt;2648934030160 -->\r\n",
       "<g id=\"edge94\" class=\"edge\"><title>2648934031216&#45;&gt;2648934030160</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M763.864,-1325.12C745.038,-1315.14 720.059,-1301.91 701.215,-1291.92\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"702.724,-1288.76 692.249,-1287.17 699.446,-1294.95 702.724,-1288.76\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933479760 -->\r\n",
       "<g id=\"node95\" class=\"node\"><title>2648933479760</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"594.5,-1059 513.5,-1059 513.5,-1024 594.5,-1024 594.5,-1059\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"554\" y=\"-1031.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64, 96, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933479760&#45;&gt;2648933480048 -->\r\n",
       "<g id=\"edge96\" class=\"edge\"><title>2648933479760&#45;&gt;2648933480048</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M541.17,-1023.8C533.128,-1013.33 522.773,-999.847 514.591,-989.194\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"517.195,-986.838 508.328,-981.04 511.644,-991.102 517.195,-986.838\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648550128896 -->\r\n",
       "<g id=\"node96\" class=\"node\"><title>2648550128896</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"667,-1059 613,-1059 613,-1024 667,-1024 667,-1059\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"640\" y=\"-1031.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648550128896&#45;&gt;2648933480048 -->\r\n",
       "<g id=\"edge97\" class=\"edge\"><title>2648550128896&#45;&gt;2648933480048</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M612.869,-1027.03C588.876,-1015.12 553.988,-997.803 529.571,-985.683\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"530.964,-982.467 520.451,-981.155 527.852,-988.737 530.964,-982.467\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933480144 -->\r\n",
       "<g id=\"node97\" class=\"node\"><title>2648933480144</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"650,-988 596,-988 596,-953 650,-953 650,-988\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"623\" y=\"-960.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933480144&#45;&gt;2648933480000 -->\r\n",
       "<g id=\"edge98\" class=\"edge\"><title>2648933480144&#45;&gt;2648933480000</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M606.653,-952.885C597.919,-944.007 587.194,-933.107 578.445,-924.215\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"580.873,-921.691 571.364,-917.018 575.883,-926.601 580.873,-921.691\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933479664 -->\r\n",
       "<g id=\"node98\" class=\"node\"><title>2648933479664</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"722,-988 668,-988 668,-953 722,-953 722,-988\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"695\" y=\"-960.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (64)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933479664&#45;&gt;2648933480000 -->\r\n",
       "<g id=\"edge99\" class=\"edge\"><title>2648933479664&#45;&gt;2648933480000</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M667.765,-956.804C645.687,-946.512 614.614,-932.027 591.861,-921.42\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"593.212,-918.188 582.669,-917.135 590.254,-924.533 593.212,-918.188\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934005632 -->\r\n",
       "<g id=\"node99\" class=\"node\"><title>2648934005632</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"598.5,-860 517.5,-860 517.5,-825 598.5,-825 598.5,-860\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"558\" y=\"-832.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32, 64, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934005632&#45;&gt;2648933932912 -->\r\n",
       "<g id=\"edge100\" class=\"edge\"><title>2648934005632&#45;&gt;2648933932912</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M545.412,-824.797C537.522,-814.327 527.363,-800.847 519.335,-790.194\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"522.003,-787.919 513.189,-782.04 516.413,-792.132 522.003,-787.919\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648934002992 -->\r\n",
       "<g id=\"node100\" class=\"node\"><title>2648934002992</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"671,-860 617,-860 617,-825 671,-825 671,-860\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"644\" y=\"-832.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648934002992&#45;&gt;2648933932912 -->\r\n",
       "<g id=\"edge101\" class=\"edge\"><title>2648934002992&#45;&gt;2648933932912</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M616.736,-827.868C592.881,-815.941 558.366,-798.683 534.23,-786.615\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"535.725,-783.449 525.216,-782.108 532.595,-789.71 535.725,-783.449\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933933008 -->\r\n",
       "<g id=\"node101\" class=\"node\"><title>2648933933008</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"655,-789 601,-789 601,-754 655,-754 655,-789\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"628\" y=\"-761.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933933008&#45;&gt;2648933932768 -->\r\n",
       "<g id=\"edge102\" class=\"edge\"><title>2648933933008&#45;&gt;2648933932768</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M616.209,-753.885C610.163,-745.366 602.796,-734.985 596.634,-726.302\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"599.396,-724.147 590.755,-718.018 593.688,-728.198 599.396,-724.147\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933929168 -->\r\n",
       "<g id=\"node102\" class=\"node\"><title>2648933929168</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"727,-789 673,-789 673,-754 727,-754 727,-789\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"700\" y=\"-761.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933929168&#45;&gt;2648933932768 -->\r\n",
       "<g id=\"edge103\" class=\"edge\"><title>2648933929168&#45;&gt;2648933932768</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M672.803,-755.964C654.128,-745.982 629.45,-732.792 610.85,-722.851\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"612.47,-719.748 602.001,-718.121 609.17,-725.922 612.47,-719.748\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931664 -->\r\n",
       "<g id=\"node103\" class=\"node\"><title>2648933931664</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"559.5,-490 478.5,-490 478.5,-455 559.5,-455 559.5,-490\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"519\" y=\"-462.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32, 48, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931664&#45;&gt;2648933932480 -->\r\n",
       "<g id=\"edge105\" class=\"edge\"><title>2648933931664&#45;&gt;2648933932480</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M519,-454.797C519,-444.956 519,-432.453 519,-422.141\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"522.5,-422.04 519,-412.04 515.5,-422.04 522.5,-422.04\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931808 -->\r\n",
       "<g id=\"node104\" class=\"node\"><title>2648933931808</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"632,-490 578,-490 578,-455 632,-455 632,-490\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"605\" y=\"-462.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931808&#45;&gt;2648933932480 -->\r\n",
       "<g id=\"edge106\" class=\"edge\"><title>2648933931808&#45;&gt;2648933932480</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M584.182,-454.797C570.35,-443.699 552.301,-429.218 538.704,-418.309\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"540.88,-415.568 530.89,-412.04 536.5,-421.028 540.88,-415.568\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931520 -->\r\n",
       "<g id=\"node105\" class=\"node\"><title>2648933931520</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"668,-419 614,-419 614,-384 668,-384 668,-419\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"641\" y=\"-391.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931520&#45;&gt;2648933931040 -->\r\n",
       "<g id=\"edge107\" class=\"edge\"><title>2648933931520&#45;&gt;2648933931040</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M641,-383.885C641,-375.994 641,-366.505 641,-358.248\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"644.5,-358.018 641,-348.018 637.5,-358.018 644.5,-358.018\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931952 -->\r\n",
       "<g id=\"node106\" class=\"node\"><title>2648933931952</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"740,-419 686,-419 686,-384 740,-384 740,-419\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"713\" y=\"-391.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (32)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931952&#45;&gt;2648933931040 -->\r\n",
       "<g id=\"edge108\" class=\"edge\"><title>2648933931952&#45;&gt;2648933931040</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M693.705,-383.885C683.187,-374.828 670.225,-363.666 659.788,-354.678\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"661.914,-351.891 652.053,-348.018 657.347,-357.195 661.914,-351.891\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933931136 -->\r\n",
       "<g id=\"node107\" class=\"node\"><title>2648933931136</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"785.5,-291 704.5,-291 704.5,-256 785.5,-256 785.5,-291\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"745\" y=\"-263.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16, 32, 3, 3)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933931136&#45;&gt;2648933930896 -->\r\n",
       "<g id=\"edge109\" class=\"edge\"><title>2648933931136&#45;&gt;2648933930896</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M745,-255.797C745,-245.956 745,-233.453 745,-223.141\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"748.5,-223.04 745,-213.04 741.5,-223.04 748.5,-223.04\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933930944 -->\r\n",
       "<g id=\"node108\" class=\"node\"><title>2648933930944</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"858,-291 804,-291 804,-256 858,-256 858,-291\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"831\" y=\"-263.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933930944&#45;&gt;2648933930896 -->\r\n",
       "<g id=\"edge110\" class=\"edge\"><title>2648933930944&#45;&gt;2648933930896</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M810.182,-255.797C796.35,-244.699 778.301,-230.218 764.704,-219.309\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"766.88,-216.568 756.89,-213.04 762.5,-222.028 766.88,-216.568\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933930464 -->\r\n",
       "<g id=\"node109\" class=\"node\"><title>2648933930464</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"894,-220 840,-220 840,-185 894,-185 894,-220\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"867\" y=\"-192.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933930464&#45;&gt;2648933931472 -->\r\n",
       "<g id=\"edge111\" class=\"edge\"><title>2648933930464&#45;&gt;2648933931472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M867,-184.885C867,-176.994 867,-167.505 867,-159.248\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"870.5,-159.018 867,-149.018 863.5,-159.018 870.5,-159.018\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933930512 -->\r\n",
       "<g id=\"node110\" class=\"node\"><title>2648933930512</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"966,-220 912,-220 912,-185 966,-185 966,-220\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"939\" y=\"-192.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (16)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933930512&#45;&gt;2648933931472 -->\r\n",
       "<g id=\"edge112\" class=\"edge\"><title>2648933930512&#45;&gt;2648933931472</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M919.705,-184.885C909.187,-175.828 896.225,-164.666 885.788,-155.678\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"887.914,-152.891 878.053,-149.018 883.347,-158.195 887.914,-152.891\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933929456 -->\r\n",
       "<g id=\"node111\" class=\"node\"><title>2648933929456</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"1005.5,-92 930.5,-92 930.5,-57 1005.5,-57 1005.5,-92\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"968\" y=\"-64.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (1, 16, 1, 1)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933929456&#45;&gt;2648933929888 -->\r\n",
       "<g id=\"edge113\" class=\"edge\"><title>2648933929456&#45;&gt;2648933929888</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M968,-56.8851C968,-48.9939 968,-39.5046 968,-31.2477\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"971.5,-31.0177 968,-21.0178 964.5,-31.0178 971.5,-31.0177\"/>\r\n",
       "</g>\r\n",
       "<!-- 2648933929984 -->\r\n",
       "<g id=\"node112\" class=\"node\"><title>2648933929984</title>\r\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"1078,-92 1024,-92 1024,-57 1078,-57 1078,-92\"/>\r\n",
       "<text text-anchor=\"middle\" x=\"1051\" y=\"-64.4\" font-family=\"Times New Roman,serif\" font-size=\"12.00\"> (1)</text>\r\n",
       "</g>\r\n",
       "<!-- 2648933929984&#45;&gt;2648933929888 -->\r\n",
       "<g id=\"edge114\" class=\"edge\"><title>2648933929984&#45;&gt;2648933929888</title>\r\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M1028.76,-56.8851C1016.39,-47.6488 1001.1,-36.2232 988.946,-27.1468\"/>\r\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"990.848,-24.1983 980.742,-21.0178 986.659,-29.8064 990.848,-24.1983\"/>\r\n",
       "</g>\r\n",
       "</g>\r\n",
       "</svg>\r\n"
      ],
      "text/plain": [
       "<graphviz.dot.Digraph at 0x268c0c414f0>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import torchviz\n",
    "dummy_x = torch.zeros((1, 1, 512, 512), dtype=torch.float, requires_grad=False)\n",
    "dummy_y = UNet(IN_CHS, OUT_CHS, UNET_DEPTH)(dummy_x)\n",
    "dot = torchviz.make_dot(dummy_y)\n",
    "dot.format = 'svg'\n",
    "dot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "5m1qqUxc-t4F"
   },
   "source": [
    "### データの読み込み"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 学習\n",
    "\n",
    "### pytorch-lightining"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:31.088680Z",
     "iopub.status.busy": "2020-12-24T19:58:31.087683Z",
     "iopub.status.idle": "2020-12-24T19:58:31.349077Z",
     "shell.execute_reply": "2020-12-24T19:58:31.349077Z"
    }
   },
   "outputs": [],
   "source": [
    "import torch.optim as optim\n",
    "import torch.nn.functional as F\n",
    "import pytorch_lightning as pl\n",
    "import os\n",
    "\n",
    "NUM_WORKERS = 0 if os.name == 'nt' else 2\n",
    "BATCH_SIZE = 8\n",
    "\n",
    "\n",
    "class LitUNet(pl.LightningModule):\n",
    "    def __init__(self, in_chs, out_chs, depth):\n",
    "        super().__init__()\n",
    "        self.model = UNet(in_chs, out_chs, depth)\n",
    "\n",
    "    def forward(self, x):\n",
    "        return self.model(x)\n",
    "\n",
    "    def training_step(self, batch, batch_idx):\n",
    "        x, y = batch\n",
    "        y_hat = self.model(x)\n",
    "        loss = F.binary_cross_entropy_with_logits(y_hat, y)\n",
    "        self.log('train_loss', loss)\n",
    "        return loss\n",
    "\n",
    "    def configure_optimizers(self):\n",
    "        optimizer = torch.optim.Adam(self.parameters(), lr=1e-3)\n",
    "        return optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:58:31.354059Z",
     "iopub.status.busy": "2020-12-24T19:58:31.354059Z",
     "iopub.status.idle": "2020-12-24T19:59:14.257494Z",
     "shell.execute_reply": "2020-12-24T19:59:14.256495Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 228/228 [00:01<00:00, 214.87it/s]\n",
      "100%|██████████| 228/228 [00:00<00:00, 531.95it/s]\n",
      "GPU available: True, used: True\n",
      "2020-12-25 04:58:32,894 INFO :GPU available: True, used: True\n",
      "TPU available: None, using: 0 TPU cores\n",
      "2020-12-25 04:58:32,896 INFO :TPU available: None, using: 0 TPU cores\n",
      "LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n",
      "2020-12-25 04:58:32,896 INFO :LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n",
      "\n",
      "  | Name  | Type | Params\n",
      "-------------------------------\n",
      "0 | model | UNet | 535 K \n",
      "-------------------------------\n",
      "535 K     Trainable params\n",
      "0         Non-trainable params\n",
      "535 K     Total params\n",
      "2020-12-25 04:58:34,081 INFO :\n",
      "  | Name  | Type | Params\n",
      "-------------------------------\n",
      "0 | model | UNet | 535 K \n",
      "-------------------------------\n",
      "535 K     Trainable params\n",
      "0         Non-trainable params\n",
      "535 K     Total params\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "48d7ae993d754cde820a664a4a5020f0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "HBox(children=(HTML(value='Training'), FloatProgress(value=1.0, bar_style='info', layout=Layout(flex='2'), max…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2020-12-25 04:59:14,108 INFO :Finish training\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pytorch_lightning.callbacks import EarlyStopping\n",
    "from pytorch_lightning.loggers import CSVLogger\n",
    "\n",
    "EPOCHS = 32\n",
    "PATIENCE = 4\n",
    "BATCH_SIZE = 4\n",
    "\n",
    "model = LitUNet(IN_CHS, OUT_CHS, UNET_DEPTH)\n",
    "\n",
    "train_data, train_labels = load_img2img_dataset(df_train, load_img)\n",
    "dataset = AugmentedDataset(train_data, train_labels, random_transform)\n",
    "trainloader = torch.utils.data.DataLoader(dataset,\n",
    "                                          batch_size=BATCH_SIZE,\n",
    "                                          shuffle=True,\n",
    "                                          num_workers=NUM_WORKERS)\n",
    "early_stop_callback = EarlyStopping(monitor='train_loss',\n",
    "                                    patience=PATIENCE,\n",
    "                                    verbose=False,\n",
    "                                    mode='min')\n",
    "csv_logger = CSVLogger('train_logs', name='lung_segmentation')\n",
    "trainer = pl.Trainer(gpus=1 if torch.cuda.is_available() else 0,\n",
    "                     max_epochs=EPOCHS,\n",
    "                     logger=csv_logger,\n",
    "                     log_every_n_steps=len(trainloader),\n",
    "                     callbacks=[early_stop_callback])\n",
    "\n",
    "trainer.fit(model, trainloader)\n",
    "logger.info('Finish training')\n",
    "df_logs = pd.read_csv(csv_logger.experiment.metrics_file_path)\n",
    "df_logs.plot(y='train_loss')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "467GUQkS-t4O"
   },
   "source": [
    "## 評価\n",
    "Dice similarity coefficient(F1 score)とJaccard Index(IoU)を評価指標とする。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:14.265486Z",
     "iopub.status.busy": "2020-12-24T19:59:14.265486Z",
     "iopub.status.idle": "2020-12-24T19:59:23.027909Z",
     "shell.execute_reply": "2020-12-24T19:59:23.028908Z"
    },
    "id": "OXsNeBGr-t4O"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 57/57 [00:00<00:00, 207.79it/s]\n",
      "100%|██████████| 57/57 [00:00<00:00, 543.98it/s]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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luSwzDCkfyE+E25ymi9U8+ZqwZwcdXC3MwoQIMD8oWkVH0yH5cTrgErPQ8jJnXdyq96knZAUxJrLSt6nGty5KRFTuD0fs0OFefySezLro8z1zNCk6RXKMib5ttaDMtEunkc1kqpGSubfpocVIECAAPUxo3lQprdiko7pbZhhNJiWdJsel4QATeGFedOv5Zm43xcpuYyhN3NTMitKKUUikagqDXeTk3le5vmbHSla4zW54Q6dtQNJ1TqGZshHVIIBAgQIUBszanVkelBmhwUz91QthzQ1NUWxWHRCblNTUyQSiQr5tjkbqhbEczM9JAnbyfBBk0DNfnxyzCYRmeflFniY5CU/zfVbA8nrSO2TO/80Xzd5d7jPhDnP1/Se5GeSaTViu5BtgAAB2hFN56DMXJEZ3jKLWqv1qzM9pmg06oxnN70xea9aSNAd1qvWZUIKgi3LcsZrSPhPtufehpkzM1V8bgh5CcG5P5sZ5OY805uyu6apneAmq0btjcxzqHb5edhOKkCAAAc11PzkUQIECBAgQID68GCwUYAAAQIECOA9AoIKECBAgABtiYCgAgQIECBAWyIgqAABAgQI0JYICCpAgAABArQlAoIKECBAgABtif8Pcbj35YMTzDcAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import math\n",
    "from sklearn import metrics\n",
    "\n",
    "label_cmap = np.array([[0, 0, 0], [255, 0, 0], [0, 255, 0], [255, 255, 0]])\n",
    "\n",
    "test_data, test_labels = load_img2img_dataset(df_test, load_img)\n",
    "test_data = (test_data / 255).astype(np.float32)\n",
    "test_labels = (test_labels > 0).astype(np.uint8)\n",
    "\n",
    "model.eval()\n",
    "model.freeze()\n",
    "\n",
    "scores = []\n",
    "for i, (data, label) in enumerate(zip(test_data, test_labels)):\n",
    "    data = data.transpose((2, 0, 1))[np.newaxis]\n",
    "    label = label.astype(np.uint8).squeeze()\n",
    "    with torch.no_grad():\n",
    "        pred = torch.sigmoid(model(torch.FloatTensor(data)))\n",
    "        pred = pred.cpu().numpy().squeeze()\n",
    "    pred_bin = (pred > .5).astype(np.uint8)\n",
    "    scores.append((metrics.f1_score(label.ravel(), pred_bin.ravel()),\n",
    "                   metrics.jaccard_score(label.ravel(), pred_bin.ravel())))\n",
    "    if i < N_SAMPLES:\n",
    "        plt.subplot(1, 5, 1)\n",
    "        plt.imshow(data.squeeze(), cmap='gray')\n",
    "        plt.title('input')\n",
    "        plt.axis('off')\n",
    "        plt.subplot(1, 5, 2)\n",
    "        plt.imshow(pred, cmap='jet')\n",
    "        plt.title('result')\n",
    "        plt.axis('off')\n",
    "        plt.subplot(1, 5, 3)\n",
    "        plt.imshow(label_cmap[[0, 1]][pred_bin.astype(np.uint8).squeeze()])\n",
    "        plt.title('result label')\n",
    "        plt.axis('off')\n",
    "        plt.subplot(1, 5, 4)\n",
    "        plt.imshow(label_cmap[[0, 2]][label.astype(np.uint8)])\n",
    "        plt.title('true label')\n",
    "        plt.axis('off')\n",
    "        plt.subplot(1, 5, 5)\n",
    "        plt.imshow(label_cmap[pred_bin + label * 2])\n",
    "        plt.title('comparison')\n",
    "        plt.axis('off')\n",
    "        plt.tight_layout()\n",
    "        plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:23.035901Z",
     "iopub.status.busy": "2020-12-24T19:59:23.034901Z",
     "iopub.status.idle": "2020-12-24T19:59:23.043893Z",
     "shell.execute_reply": "2020-12-24T19:59:23.044892Z"
    },
    "id": "jmPLf7yB-t4S"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dice coefficient</th>\n",
       "      <th>jaccard index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.967223</td>\n",
       "      <td>0.936527</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.950637</td>\n",
       "      <td>0.905919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.983885</td>\n",
       "      <td>0.968281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.953997</td>\n",
       "      <td>0.912040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.980320</td>\n",
       "      <td>0.961400</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    dice coefficient  jaccard index\n",
       "8           0.967223       0.936527\n",
       "9           0.950637       0.905919\n",
       "10          0.983885       0.968281\n",
       "21          0.953997       0.912040\n",
       "26          0.980320       0.961400"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>median</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>dice coefficient</th>\n",
       "      <td>0.957612</td>\n",
       "      <td>0.953377</td>\n",
       "      <td>0.018766</td>\n",
       "      <td>0.894611</td>\n",
       "      <td>0.983885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>jaccard index</th>\n",
       "      <td>0.918671</td>\n",
       "      <td>0.911498</td>\n",
       "      <td>0.033521</td>\n",
       "      <td>0.809317</td>\n",
       "      <td>0.968281</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    median      mean       std       min       max\n",
       "dice coefficient  0.957612  0.953377  0.018766  0.894611  0.983885\n",
       "jaccard index     0.918671  0.911498  0.033521  0.809317  0.968281"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_score = pd.DataFrame(scores,\n",
    "                        columns=['dice coefficient', 'jaccard index'],\n",
    "                        index=test_index)\n",
    "display(df_score.head())\n",
    "display(\n",
    "    pd.DataFrame({\n",
    "        'median': df_score.median(),\n",
    "        'mean': df_score.mean(),\n",
    "        'std': df_score.std(),\n",
    "        'min': df_score.min(),\n",
    "        'max': df_score.max(),\n",
    "    }))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 分布の確認\n",
    "Dice similarity coefficientの分布を表示する。\n",
    "\n",
    "#### ヒストグラム"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:23.047889Z",
     "iopub.status.busy": "2020-12-24T19:59:23.046889Z",
     "iopub.status.idle": "2020-12-24T19:59:23.209722Z",
     "shell.execute_reply": "2020-12-24T19:59:23.209722Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "sns.histplot(x=df_score['dice coefficient'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Boxplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:23.233699Z",
     "iopub.status.busy": "2020-12-24T19:59:23.231701Z",
     "iopub.status.idle": "2020-12-24T19:59:23.291306Z",
     "shell.execute_reply": "2020-12-24T19:59:23.291306Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='dice coefficient', data=df_score)\n",
    "sns.swarmplot(x='dice coefficient', data=df_score, color='.2')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Letter value plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:23.307290Z",
     "iopub.status.busy": "2020-12-24T19:59:23.307290Z",
     "iopub.status.idle": "2020-12-24T19:59:23.374476Z",
     "shell.execute_reply": "2020-12-24T19:59:23.374476Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxenplot(x='dice coefficient', data=df_score)\n",
    "sns.swarmplot(x='dice coefficient',\n",
    "              data=df_score,\n",
    "              color='white',\n",
    "              edgecolor='black',\n",
    "              linewidth=1)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Violinplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-24T19:59:23.378459Z",
     "iopub.status.busy": "2020-12-24T19:59:23.378459Z",
     "iopub.status.idle": "2020-12-24T19:59:23.463392Z",
     "shell.execute_reply": "2020-12-24T19:59:23.463392Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.violinplot(x='dice coefficient', data=df_score, inner=None)\n",
    "sns.swarmplot(x='dice coefficient',\n",
    "              data=df_score,\n",
    "              color='white',\n",
    "              edgecolor='gray')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [],
   "name": "lung_segmentation_tfdata.ipynb",
   "provenance": [],
   "toc_visible": true
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "359.2px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "21bc5b438d254c90a88329b04a9dee86": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "25aa24d16956459fba915b3f9633df9d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_fcc666d9173d41878a240df5f55be4a8",
       "max": 57.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_7049a72c2ac84d01948b5baf037630bf",
       "value": 57.0
      }
     },
     "48d7ae993d754cde820a664a4a5020f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e7ae610a5f5e432790b89ff0da31567e",
        "IPY_MODEL_25aa24d16956459fba915b3f9633df9d",
        "IPY_MODEL_7ef9836fcf14442e82cfac76aae3fc03"
       ],
       "layout": "IPY_MODEL_4e3a476c071d435d9e3930ec009003ca"
      }
     },
     "4e3a476c071d435d9e3930ec009003ca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "6faf824753bb4831ae9d8e65b4a1f0d7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "7049a72c2ac84d01948b5baf037630bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "7ef9836fcf14442e82cfac76aae3fc03": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_21bc5b438d254c90a88329b04a9dee86",
       "placeholder": "​",
       "style": "IPY_MODEL_6faf824753bb4831ae9d8e65b4a1f0d7",
       "value": " 57/57 [00:02&lt;00:00, 24.69it/s, loss=0.0771, v_num=0]"
      }
     },
     "b45fa418da0a4ed781e2e95337a3e955": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "e7ae610a5f5e432790b89ff0da31567e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_f229ed9033b84327a7a5d86da3685699",
       "placeholder": "​",
       "style": "IPY_MODEL_b45fa418da0a4ed781e2e95337a3e955",
       "value": "Epoch 16: 100%"
      }
     },
     "f229ed9033b84327a7a5d86da3685699": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fcc666d9173d41878a240df5f55be4a8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
